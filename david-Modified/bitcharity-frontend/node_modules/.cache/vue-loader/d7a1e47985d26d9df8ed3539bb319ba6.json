{"remainingRequest":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateSchema.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateSchema.vue","mtime":1605139847620},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwoKZXhwb3J0IGRlZmF1bHQgewogICAgcHJvcHM6Wyd3YXgnLCdhc3NldElEJ10sCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuewogICAgICAgICAgICByb3dzOltdLAogICAgICAgICAgICB0aXRsZToiIiwKICAgICAgICAgICAgY291bnRGaXJzdGJveElucHV0SUQ6MCwKICAgICAgICAgICAgY291bnRTZWNvbmRib3hJbnB1dElEOjAsCiAgICAgICAgICAgIFNjaGVtYV9uYW1lOiIiLAogICAgICAgICAgICBzY2hlbWFmb3JtYXQ6W3sKICAgICAgICAgICAgICAgICJuYW1lIjoibmFtZSIsCiAgICAgICAgICAgICAgICAidHlwZSI6InN0cmluZyIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgIm5hbWUiOiJpbWciLAogICAgICAgICAgICAgICAgICAidHlwZSI6ImltYWdlIgogICAgICAgICAgICAgIH1dCiAgICAgICAgfQogICAgfSwKICAgIHdhdGNoOnsKCiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgLi4ubWFwR2V0dGVycyhbCiAgICAgICAgJ2dldFdheCcKICAgICAgXSksCiAgICAgIGNvbGxlY3Rpb25OYW1lOmZ1bmN0aW9uKCl7CiAgICAgICAgICByZXR1cm4gdGhpcy5jb2xsZWN0aW9ubmFtZQogICAgICB9LAogICAgICBzY2hlbWFGb3JtYXQ6ZnVuY3Rpb24oKXsKICAgICAgICAgcmV0dXJuIHRoaXMuc2NoZW1hZm9ybWF0OwogICAgICB9CiAgICB9LAogICAgbWV0aG9kczp7CiAgICAgICAgc2lnbmFsQ2hhbmdlOmZ1bmN0aW9uKGV2dCl7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJ0aGlzIGlzIGNoYW5nZWQiKQogICAgICAgICAgICB0aGlzLiRlbWl0KCJjaGFuZ2UiLCBldnQpCiAgICAgICAgfSwKICAgICAgICBhZGRSb3c6IGZ1bmN0aW9uKCl7CiAgICAgICAgICAgIHZhciBlbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndHInKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLnJvd3MucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAiIiwKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnJvd3MpCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW07CiAgICAgICAgfSwKICAgICAgICByZW1vdmVFbGVtZW50OiBmdW5jdGlvbihpbmRleCkgewogICAgICAgICAgICAgICAgICAgIHRoaXMucm93cy5zcGxpY2UoaW5kZXgsIDEpOwogICAgICAgIH0sCiAgICAgICAgIHNldEZpbGVuYW1lOiBmdW5jdGlvbihldmVudCwgcm93KSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07CiAgICAgICAgICAgICAgICAgICAgcm93LmZpbGUgPSBmaWxlCiAgICAgICAgfSwKICAgICAgICBhc3luYyBDcmVhdGVTY2hlbWEoKXsKICAgICAgICAgICBmb3IodmFyIGtleSBpbiB0aGlzLnJvd3MpewogICAgICAgICAgICAgICB0aGlzLnNjaGVtYWZvcm1hdC5wdXNoKHsibmFtZSI6dGhpcy5yb3dzW2tleV0ubmFtZSwidHlwZSI6dGhpcy5yb3dzW2tleV0udHlwZX0pCiAgICAgICAgICAgfQogICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2NoZW1hZm9ybWF0KTsKCiAgICAgICAgICAgIGlmKCF0aGlzLmdldFdheC5hcGkpewogICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coIk5lZWQgdG8gbG9naW4gZmlyc3QiKQogICAgICAgICAgIH0KICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICB0aGlzLnJlc3VsdD1hd2FpdCB0aGlzLmdldFdheC5hcGkudHJhbnNhY3QoewogICAgICAgICAgICAgICAgICAgYWN0aW9uczpbewogICAgICAgICAgICAgICAgICAgIGFjY291bnQ6ICdhdG9taWNhc3NldHMnLAogICAgICAgICAgICAgICAgICAgIG5hbWU6ICdjcmVhdGVzY2hlbWEnLAogICAgICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246IFt7CiAgICAgICAgICAgICAgICAgICAgICAgIGFjdG9yOiB0aGlzLmdldFdheC51c2VyQWNjb3VudCwKICAgICAgICAgICAgICAgICAgICAgICAgcGVybWlzc2lvbjonYWN0aXZlJywKICAgICAgICAgICAgICAgICAgICB9XSwKICAgICAgICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGF1dGhvcml6ZWRfY3JlYXRvcjp0aGlzLmdldFdheC51c2VyQWNjb3VudCwKICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvbl9uYW1lOnRoaXMuY29sbGVjdGlvbk5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgIHNjaGVtYV9mb3JtYXQ6dGhpcy5zY2hlbWFmb3JtYXQsCiAgICAgICAgICAgICAgICAgICAgICAgIHNjaGVtYV9uYW1lOnRoaXMuU2NoZW1hX25hbWUKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgfSx7CiAgICAgICAgICAgICAgICAgICBibG9ja3NCZWhpbmQ6IDMsCiAgICAgICAgICAgICAgICAgICBleHBpcmVTZWNvbmQ6IDMwCiAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMucmVzdWx0KTsKICAgICAgICAgICAgICAgY29uc29sZS5sb2coIlRISVMgQVVUSE9SIElTICIrdGhpcy5hdXRob3IpOwogICAgICAgICAgIH0KICAgICAgICAgICBjYXRjaChlKXsKICAgICAgICAgICAgICAgdGhpcy5yZXN1bHQ9ZQogICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKQogICAgICAgICAgIH0gICAKICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["CreateSchema.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateSchema.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <p>{{getWax}}</p>\n        <p>Create Schema</p>\n        <p>Schema_name</p>\n        <input v-model=\"Schema_name\" placeholder=\"Schema name\">\n        <p>Attribute Name</p><br />\n        <p>name</p><br />\n        <p>img</p>\n        <p>Attribute Type</p><br />\n        <p>text</p><br />\n        <p>img</p>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <tbody>\n                        <td><strong>Attribute_name</strong></td>\n                        <td><strong>Attribute_type</strong></td>\n                    \n                            <tr v-for=\"(row, index) in rows\" :key=row.index>\n                                <td><input type=\"text\" v-model=\"row.name\"></td>\n                                <td><input type=\"text\" v-model=\"row.type\"></td>\n                                <td>\n                                    <a v-on:click=\"removeElement(index);\" style=\"cursor: pointer\">Remove</a>\n                                </td>\n                            </tr>\n                    </tbody>\n                </tr>\n            </thead>\n        </table>\n        <div>\n            <button class=\"button btn-primary\" @click=\"addRow\">Add row</button>\n            <button class=\"button btn-primary\" @click=\"CreateSchema()\">Add Schema</button>\n        </div>\n    </div>\n\n</template>\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n    props:['wax','assetID'],\n    data(){\n        return{\n            rows:[],\n            title:\"\",\n            countFirstboxInputID:0,\n            countSecondboxInputID:0,\n            Schema_name:\"\",\n            schemaformat:[{\n                \"name\":\"name\",\n                \"type\":\"string\"\n              },\n              {\n                  \"name\":\"img\",\n                  \"type\":\"image\"\n              }]\n        }\n    },\n    watch:{\n\n    },\n    computed: {\n      ...mapGetters([\n        'getWax'\n      ]),\n      collectionName:function(){\n          return this.collectionname\n      },\n      schemaFormat:function(){\n         return this.schemaformat;\n      }\n    },\n    methods:{\n        signalChange:function(evt){\n            console.log(\"this is changed\")\n            this.$emit(\"change\", evt)\n        },\n        addRow: function(){\n            var elem = document.createElement('tr');\n                    this.rows.push({\n                        name: \"\",\n                        type: \"\",\n                    });\n                    console.log(this.rows)\n                    return elem;\n        },\n        removeElement: function(index) {\n                    this.rows.splice(index, 1);\n        },\n         setFilename: function(event, row) {\n                    var file = event.target.files[0];\n                    row.file = file\n        },\n        async CreateSchema(){\n           for(var key in this.rows){\n               this.schemaformat.push({\"name\":this.rows[key].name,\"type\":this.rows[key].type})\n           }\n           console.log(this.schemaformat);\n\n            if(!this.getWax.api){\n               return console.log(\"Need to login first\")\n           }\n           try {\n               this.result=await this.getWax.api.transact({\n                   actions:[{\n                    account: 'atomicassets',\n                    name: 'createschema',\n                    authorization: [{\n                        actor: this.getWax.userAccount,\n                        permission:'active',\n                    }],\n                    data: {\n                        authorized_creator:this.getWax.userAccount,\n                        collection_name:this.collectionName,\n                        schema_format:this.schemaformat,\n                        schema_name:this.Schema_name\n                    },\n                }]\n               },{\n                   blocksBehind: 3,\n                   expireSecond: 30\n               })\n               console.log(this.result);\n               console.log(\"THIS AUTHOR IS \"+this.author);\n           }\n           catch(e){\n               this.result=e\n               console.log(e)\n           }   \n       }\n    }\n}\n</script>"]}]}