{"remainingRequest":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/NFTPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/NFTPage.vue","mtime":1605045375913},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOidORlQgQXNzZXRzJywKICAgIGNvbXBvbmVudHM6ewoKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAuLi5tYXBHZXR0ZXJzKFsKICAgICAgICAnZ2V0V2F4JwogICAgICBdKQogICAgfSwKICAgIGRhdGEoKXsKICAgICAgcmV0dXJuewogICAgICAgIHdheDoiIiwKICAgICAgICBzdGF0ZToiIgogICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpewogICAgICB0aGlzLndheCA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0V2F4CiAgICB9LAp9Cg=="},{"version":3,"sources":["NFTPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NFTPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n      <P>My Collections</p>\n      \n        <p>this is {{getWax}}</p>\n      <div v-if='this.getWax!=\"\"'>\n        <ApolloQuery :query=\"require('../graphQL/collectionsinfo.gql')\" :variables=\"{owner:'kdoaw.wam'}\">\n          <template v-slot=\"{ result: { data } }\">\n            <div v-for=\"(item,index) in data.atomicassets_assets\" :key=\"item.collection_name\">\n              {{index}}: {{item.collection_name}}\n             <button class=\"btn btn-primary\" @click=\"$router.push({name:'collectionInfo',params:{collectionname:item.collection_name}})\">Details</button>&nbsp;&nbsp;\n            </div>\n          </template>\n          </ApolloQuery> \n          <button @click=\"$router.push({path:'/NFT/creator'})\">Create</button>\n      </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nexport default {\n    name:'NFT Assets',\n    components:{\n\n    },\n    computed: {\n      ...mapGetters([\n        'getWax'\n      ])\n    },\n    data(){\n      return{\n        wax:\"\",\n        state:\"\"\n      }\n    },\n    mounted(){\n      this.wax = this.$store.getters.getWax\n    },\n}\n</script>"]}]}