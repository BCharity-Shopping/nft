{"remainingRequest":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateSchema.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateSchema.vue","mtime":1605139847620},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9kYXZpZHNoZW4vRGVza3RvcC9CbG9ja0NoYWluL0JjaGFyaXR5LVZlcnNpb24yL2RhdmlkLU1vZGlmaWVkL2JpdGNoYXJpdHktZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvZGF2aWRzaGVuL0Rlc2t0b3AvQmxvY2tDaGFpbi9CY2hhcml0eS1WZXJzaW9uMi9kYXZpZC1Nb2RpZmllZC9iaXRjaGFyaXR5LWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsnd2F4JywgJ2Fzc2V0SUQnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcm93czogW10sCiAgICAgIHRpdGxlOiAiIiwKICAgICAgY291bnRGaXJzdGJveElucHV0SUQ6IDAsCiAgICAgIGNvdW50U2Vjb25kYm94SW5wdXRJRDogMCwKICAgICAgU2NoZW1hX25hbWU6ICIiLAogICAgICBzY2hlbWFmb3JtYXQ6IFt7CiAgICAgICAgIm5hbWUiOiAibmFtZSIsCiAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICB9LCB7CiAgICAgICAgIm5hbWUiOiAiaW1nIiwKICAgICAgICAidHlwZSI6ICJpbWFnZSIKICAgICAgfV0KICAgIH07CiAgfSwKICB3YXRjaDoge30sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbJ2dldFdheCddKSksIHt9LCB7CiAgICBjb2xsZWN0aW9uTmFtZTogZnVuY3Rpb24gY29sbGVjdGlvbk5hbWUoKSB7CiAgICAgIHJldHVybiB0aGlzLmNvbGxlY3Rpb25uYW1lOwogICAgfSwKICAgIHNjaGVtYUZvcm1hdDogZnVuY3Rpb24gc2NoZW1hRm9ybWF0KCkgewogICAgICByZXR1cm4gdGhpcy5zY2hlbWFmb3JtYXQ7CiAgICB9CiAgfSksCiAgbWV0aG9kczogewogICAgc2lnbmFsQ2hhbmdlOiBmdW5jdGlvbiBzaWduYWxDaGFuZ2UoZXZ0KSB7CiAgICAgIGNvbnNvbGUubG9nKCJ0aGlzIGlzIGNoYW5nZWQiKTsKICAgICAgdGhpcy4kZW1pdCgiY2hhbmdlIiwgZXZ0KTsKICAgIH0sCiAgICBhZGRSb3c6IGZ1bmN0aW9uIGFkZFJvdygpIHsKICAgICAgdmFyIGVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0cicpOwogICAgICB0aGlzLnJvd3MucHVzaCh7CiAgICAgICAgbmFtZTogIiIsCiAgICAgICAgdHlwZTogIiIKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMucm93cyk7CiAgICAgIHJldHVybiBlbGVtOwogICAgfSwKICAgIHJlbW92ZUVsZW1lbnQ6IGZ1bmN0aW9uIHJlbW92ZUVsZW1lbnQoaW5kZXgpIHsKICAgICAgdGhpcy5yb3dzLnNwbGljZShpbmRleCwgMSk7CiAgICB9LAogICAgc2V0RmlsZW5hbWU6IGZ1bmN0aW9uIHNldEZpbGVuYW1lKGV2ZW50LCByb3cpIHsKICAgICAgdmFyIGZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07CiAgICAgIHJvdy5maWxlID0gZmlsZTsKICAgIH0sCiAgICBDcmVhdGVTY2hlbWE6IGZ1bmN0aW9uIENyZWF0ZVNjaGVtYSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGtleTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBmb3IgKGtleSBpbiBfdGhpcy5yb3dzKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLnNjaGVtYWZvcm1hdC5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAibmFtZSI6IF90aGlzLnJvd3Nba2V5XS5uYW1lLAogICAgICAgICAgICAgICAgICAgICJ0eXBlIjogX3RoaXMucm93c1trZXldLnR5cGUKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX3RoaXMuc2NoZW1hZm9ybWF0KTsKCiAgICAgICAgICAgICAgICBpZiAoX3RoaXMuZ2V0V2F4LmFwaSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgY29uc29sZS5sb2coIk5lZWQgdG8gbG9naW4gZmlyc3QiKSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA0OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuZ2V0V2F4LmFwaS50cmFuc2FjdCh7CiAgICAgICAgICAgICAgICAgIGFjdGlvbnM6IFt7CiAgICAgICAgICAgICAgICAgICAgYWNjb3VudDogJ2F0b21pY2Fzc2V0cycsCiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2NyZWF0ZXNjaGVtYScsCiAgICAgICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogW3sKICAgICAgICAgICAgICAgICAgICAgIGFjdG9yOiBfdGhpcy5nZXRXYXgudXNlckFjY291bnQsCiAgICAgICAgICAgICAgICAgICAgICBwZXJtaXNzaW9uOiAnYWN0aXZlJwogICAgICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgICAgICAgIGF1dGhvcml6ZWRfY3JlYXRvcjogX3RoaXMuZ2V0V2F4LnVzZXJBY2NvdW50LAogICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvbl9uYW1lOiBfdGhpcy5jb2xsZWN0aW9uTmFtZSwKICAgICAgICAgICAgICAgICAgICAgIHNjaGVtYV9mb3JtYXQ6IF90aGlzLnNjaGVtYWZvcm1hdCwKICAgICAgICAgICAgICAgICAgICAgIHNjaGVtYV9uYW1lOiBfdGhpcy5TY2hlbWFfbmFtZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgYmxvY2tzQmVoaW5kOiAzLAogICAgICAgICAgICAgICAgICBleHBpcmVTZWNvbmQ6IDMwCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX3RoaXMucmVzdWx0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLnJlc3VsdCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiVEhJUyBBVVRIT1IgSVMgIiArIF90aGlzLmF1dGhvcik7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oNCk7CiAgICAgICAgICAgICAgICBfdGhpcy5yZXN1bHQgPSBfY29udGV4dC50MDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbNCwgMTJdXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["CreateSchema.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <p>{{getWax}}</p>\n        <p>Create Schema</p>\n        <p>Schema_name</p>\n        <input v-model=\"Schema_name\" placeholder=\"Schema name\">\n        <p>Attribute Name</p><br />\n        <p>name</p><br />\n        <p>img</p>\n        <p>Attribute Type</p><br />\n        <p>text</p><br />\n        <p>img</p>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <tbody>\n                        <td><strong>Attribute_name</strong></td>\n                        <td><strong>Attribute_type</strong></td>\n                    \n                            <tr v-for=\"(row, index) in rows\" :key=row.index>\n                                <td><input type=\"text\" v-model=\"row.name\"></td>\n                                <td><input type=\"text\" v-model=\"row.type\"></td>\n                                <td>\n                                    <a v-on:click=\"removeElement(index);\" style=\"cursor: pointer\">Remove</a>\n                                </td>\n                            </tr>\n                    </tbody>\n                </tr>\n            </thead>\n        </table>\n        <div>\n            <button class=\"button btn-primary\" @click=\"addRow\">Add row</button>\n            <button class=\"button btn-primary\" @click=\"CreateSchema()\">Add Schema</button>\n        </div>\n    </div>\n\n</template>\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n    props:['wax','assetID'],\n    data(){\n        return{\n            rows:[],\n            title:\"\",\n            countFirstboxInputID:0,\n            countSecondboxInputID:0,\n            Schema_name:\"\",\n            schemaformat:[{\n                \"name\":\"name\",\n                \"type\":\"string\"\n              },\n              {\n                  \"name\":\"img\",\n                  \"type\":\"image\"\n              }]\n        }\n    },\n    watch:{\n\n    },\n    computed: {\n      ...mapGetters([\n        'getWax'\n      ]),\n      collectionName:function(){\n          return this.collectionname\n      },\n      schemaFormat:function(){\n         return this.schemaformat;\n      }\n    },\n    methods:{\n        signalChange:function(evt){\n            console.log(\"this is changed\")\n            this.$emit(\"change\", evt)\n        },\n        addRow: function(){\n            var elem = document.createElement('tr');\n                    this.rows.push({\n                        name: \"\",\n                        type: \"\",\n                    });\n                    console.log(this.rows)\n                    return elem;\n        },\n        removeElement: function(index) {\n                    this.rows.splice(index, 1);\n        },\n         setFilename: function(event, row) {\n                    var file = event.target.files[0];\n                    row.file = file\n        },\n        async CreateSchema(){\n           for(var key in this.rows){\n               this.schemaformat.push({\"name\":this.rows[key].name,\"type\":this.rows[key].type})\n           }\n           console.log(this.schemaformat);\n\n            if(!this.getWax.api){\n               return console.log(\"Need to login first\")\n           }\n           try {\n               this.result=await this.getWax.api.transact({\n                   actions:[{\n                    account: 'atomicassets',\n                    name: 'createschema',\n                    authorization: [{\n                        actor: this.getWax.userAccount,\n                        permission:'active',\n                    }],\n                    data: {\n                        authorized_creator:this.getWax.userAccount,\n                        collection_name:this.collectionName,\n                        schema_format:this.schemaformat,\n                        schema_name:this.Schema_name\n                    },\n                }]\n               },{\n                   blocksBehind: 3,\n                   expireSecond: 30\n               })\n               console.log(this.result);\n               console.log(\"THIS AUTHOR IS \"+this.author);\n           }\n           catch(e){\n               this.result=e\n               console.log(e)\n           }   \n       }\n    }\n}\n</script>"],"sourceRoot":"src/components"}]}