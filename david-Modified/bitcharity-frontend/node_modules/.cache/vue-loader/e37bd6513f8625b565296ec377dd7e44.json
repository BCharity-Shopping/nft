{"remainingRequest":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateSchema.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateSchema.vue","mtime":1605636173488},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwoKZXhwb3J0IGRlZmF1bHQgewogICAgcHJvcHM6Wyd3YXgnLCdhc3NldElEJ10sCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuewogICAgICAgICAgICByb3dzOltdLAogICAgICAgICAgICB0aXRsZToiIiwKICAgICAgICAgICAgY29sbGVjdGlvbm5hbWU6IiIsCiAgICAgICAgICAgIGNvdW50Rmlyc3Rib3hJbnB1dElEOjAsCiAgICAgICAgICAgIGNvdW50U2Vjb25kYm94SW5wdXRJRDowLAogICAgICAgICAgICBTY2hlbWFfbmFtZToiIiwKICAgICAgICAgICAgc2NoZW1hX2Zvcm1hdDpbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiJuYW1lIiwKICAgICAgICAgICAgICAgICAgICAidHlwZSI6InN0cmluZyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiJpbWciLAogICAgICAgICAgICAgICAgICAgICJ0eXBlIjoiaW1hZ2UiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpewogICAgICAgIHRoaXMuY29sbGVjdGlvbm5hbWU9dGhpcy4kcm91dGUucGFyYW1zLmNvbGxlY3Rpb25uYW1lCiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgLi4ubWFwR2V0dGVycyhbCiAgICAgICAgJ2dldFdheCcKICAgICAgXSksCiAgICAgIGNvbGxlY3Rpb25OYW1lOmZ1bmN0aW9uKCl7CiAgICAgICAgICByZXR1cm4gdGhpcy5jb2xsZWN0aW9ubmFtZQogICAgICB9LAogICAgICBzY2hlbWFGb3JtYXQ6ZnVuY3Rpb24oKXsKICAgICAgICAgcmV0dXJuIHRoaXMuc2NoZW1hX2Zvcm1hdDsKICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6ewogICAgICAgIHNpZ25hbENoYW5nZTpmdW5jdGlvbihldnQpewogICAgICAgICAgICBjb25zb2xlLmxvZygidGhpcyBpcyBjaGFuZ2VkIikKICAgICAgICAgICAgdGhpcy4kZW1pdCgiY2hhbmdlIiwgZXZ0KQogICAgICAgIH0sCiAgICAgICAgYWRkUm93OiBmdW5jdGlvbigpewogICAgICAgICAgICB2YXIgZWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RyJyk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb3dzLnB1c2goewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogIiIsCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5yb3dzKQogICAgICAgICAgICAgICAgICAgIHJldHVybiBlbGVtOwogICAgICAgIH0sCiAgICAgICAgcmVtb3ZlRWxlbWVudDogZnVuY3Rpb24oaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnJvd3Muc3BsaWNlKGluZGV4LCAxKTsKICAgICAgICB9LAogICAgICAgIGFzeW5jIENyZWF0ZVNjaGVtYSgpewogICAgICAgICAgICAKICAgICAgICAgICAgZm9yKHZhciBrZXkgaW4gdGhpcy5yb3dzKXsKICAgICAgICAgICAgICAgdGhpcy5zY2hlbWFfZm9ybWF0LnB1c2goeyJuYW1lIjp0aGlzLnJvd3Nba2V5XS5uYW1lLCJ0eXBlIjp0aGlzLnJvd3Nba2V5XS50eXBlfSkKICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJpdCBpcyAiK3RoaXMuY29sbGVjdGlvbk5hbWUpOwogICAgICAgICAgICBpZighdGhpcy5nZXRXYXguYXBpKXsKICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKCJOZWVkIHRvIGxvZ2luIGZpcnN0IikKICAgICAgICAgICB9CiAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgdGhpcy5yZXN1bHQ9YXdhaXQgdGhpcy5nZXRXYXguYXBpLnRyYW5zYWN0KHsKICAgICAgICAgICAgICAgICAgIGFjdGlvbnM6W3sKICAgICAgICAgICAgICAgICAgICBhY2NvdW50OiAnYXRvbWljYXNzZXRzJywKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnY3JlYXRlc2NoZW1hJywKICAgICAgICAgICAgICAgICAgICBhdXRob3JpemF0aW9uOiBbewogICAgICAgICAgICAgICAgICAgICAgICBhY3RvcjogdGhpcy5nZXRXYXgudXNlckFjY291bnQsCiAgICAgICAgICAgICAgICAgICAgICAgIHBlcm1pc3Npb246J2FjdGl2ZScsCiAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAgICAgICAgICBhdXRob3JpemVkX2NyZWF0b3I6dGhpcy5nZXRXYXgudXNlckFjY291bnQsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25fbmFtZTp0aGlzLmNvbGxlY3Rpb25uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWFfZm9ybWF0OnRoaXMuc2NoZW1hRm9ybWF0LAogICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWFfbmFtZTp0aGlzLlNjaGVtYV9uYW1lLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICB9LHsKICAgICAgICAgICAgICAgICAgIGJsb2Nrc0JlaGluZDogMywKICAgICAgICAgICAgICAgICAgIGV4cGlyZVNlY29uZHM6IDMwCiAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgIH0KICAgICAgICAgICBjYXRjaChlKXsKICAgICAgICAgICAgICAgdGhpcy5yZXN1bHQ9ZQogICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKQogICAgICAgICAgIH0gICAKICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["CreateSchema.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateSchema.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <p>{{getWax}}</p>\n        <P>this is:{{collectionname}}</P>\n        <p>Create Schema</p>\n        <p>Schema_name</p>\n        <input v-model=\"Schema_name\" placeholder=\"Schema name\">\n        <p>Attribute Name</p><br />\n        <p>name</p><br />\n        <p>img</p>\n        <p>Attribute Type</p><br />\n        <p>text</p><br />\n        <p>img</p>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <tbody>\n                        <td><strong>Attribute_name</strong></td>\n                        <td><strong>Attribute_type</strong></td>\n                    \n                            <tr v-for=\"(row, index) in rows\" :key=row.index>\n                                <td><input type=\"text\" v-model=\"row.name\"></td>\n                                <td><input type=\"text\" v-model=\"row.type\"></td>\n                                <td>\n                                    <a v-on:click=\"removeElement(index);\" style=\"cursor: pointer\">Remove</a>\n                                </td>\n                            </tr>\n                    </tbody>\n                </tr>\n            </thead>\n        </table>\n        <div>\n            <button class=\"button btn-primary\" @click=\"addRow\">Add row</button>\n            <button class=\"button btn-primary\" @click=\"CreateSchema()\">Add Schema</button>\n        </div>\n    </div>\n\n</template>\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n    props:['wax','assetID'],\n    data(){\n        return{\n            rows:[],\n            title:\"\",\n            collectionname:\"\",\n            countFirstboxInputID:0,\n            countSecondboxInputID:0,\n            Schema_name:\"\",\n            schema_format:[\n                {\n                    \"name\":\"name\",\n                    \"type\":\"string\"\n                },\n                {\n                    \"name\":\"img\",\n                    \"type\":\"image\"\n                }\n            ]\n        }\n    },\n    created(){\n        this.collectionname=this.$route.params.collectionname\n    },\n    computed: {\n      ...mapGetters([\n        'getWax'\n      ]),\n      collectionName:function(){\n          return this.collectionname\n      },\n      schemaFormat:function(){\n         return this.schema_format;\n      }\n    },\n    methods:{\n        signalChange:function(evt){\n            console.log(\"this is changed\")\n            this.$emit(\"change\", evt)\n        },\n        addRow: function(){\n            var elem = document.createElement('tr');\n                    this.rows.push({\n                        name: \"\",\n                        type: \"\",\n                    });\n                    console.log(this.rows)\n                    return elem;\n        },\n        removeElement: function(index) {\n                    this.rows.splice(index, 1);\n        },\n        async CreateSchema(){\n            \n            for(var key in this.rows){\n               this.schema_format.push({\"name\":this.rows[key].name,\"type\":this.rows[key].type})\n           }\n            console.log(\"it is \"+this.collectionName);\n            if(!this.getWax.api){\n               return console.log(\"Need to login first\")\n           }\n           try {\n               this.result=await this.getWax.api.transact({\n                   actions:[{\n                    account: 'atomicassets',\n                    name: 'createschema',\n                    authorization: [{\n                        actor: this.getWax.userAccount,\n                        permission:'active',\n                    }],\n                    data: {\n                        authorized_creator:this.getWax.userAccount,\n                        collection_name:this.collectionname,\n                        schema_format:this.schemaFormat,\n                        schema_name:this.Schema_name,\n                    },\n                }]\n               },{\n                   blocksBehind: 3,\n                   expireSeconds: 30\n               });\n           }\n           catch(e){\n               this.result=e\n               console.log(e)\n           }   \n       }\n    }\n}\n</script>"]}]}