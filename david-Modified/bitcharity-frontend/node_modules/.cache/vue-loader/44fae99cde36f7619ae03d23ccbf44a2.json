{"remainingRequest":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateAssets.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateAssets.vue","mtime":1605590056588},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgIAogICAgZGF0YSgpewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGltbXV0YWJsZV9kYXRhOltdLAogICAgICAgICAgICBzY2hlbWFfbmFtZToiIiwKICAgICAgICAgICAgQXNzZXRPd25lcjoiIiwKICAgICAgICAgICAgTnVtYmVyT2ZDb3BpZXM6IiIsCiAgICAgICAgICAgIFRlbXBsYXRlOiIiLAogICAgICAgICAgICBhdHRyaWJ1dGVfdGFibGU6dGhpcy5kYXRhLAogICAgICAgIH0KICAgIH0sCiAgICBhcG9sbG86ewogICAgICAgIGF0dHJpYnV0ZV90YWJsZTogewogICAgICAgICAgICBxdWVyeTogZ3FsYHF1ZXJ5IGNvbGxlY3Rpb25TY2hlbWEoJHNjaGVtYV9uYW1lOiBTdHJpbmcpewogICAgICAgICAgICAgICAgICAgIGF0b21pY2Fzc2V0c19zY2hlbWFzX2FnZ3JlZ2F0ZSh3aGVyZToge3NjaGVtYV9uYW1lOiB7X2VxOiAkc2NoZW1hX25hbWV9fSkgewogICAgICAgICAgICAgICAgICAgICAgICBub2RlcyB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXQKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH1gLAogICAgICAgICAgICAgICAgdmFyaWFibGVzKCl7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWFfbmFtZTogdGhpcy5zY2hlbWFfbmFtZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHVwZGF0ZTogZGF0YSA9PiBkYXRhLmF0b21pY2Fzc2V0c19zY2hlbWFzX2FnZ3JlZ2F0ZS5ub2Rlc1swXS5mb3JtYXQsCgogICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIAoKICAgIH0sCiAgICBiZWZvcmVNb3VudCgpIHsKICAgICAgdGhpcy5jb2xsZWN0aW9uX25hbWUgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuY29sbGVjdG5hbWU7CiAgICAgIHRoaXMuc2NoZW1hX25hbWU9dGhpcy4kcm91dGUucGFyYW1zLnNjaGVtYU5hbWUKICAgICAgY29uc29sZS5sb2coImNvbGxlY3Rpb24gbmFtZSBpcyIgKyB0aGlzLmNvbGxlY3Rpb25fbmFtZSk7CiAgICAgIGNvbnNvbGUubG9nKCJ0aGUgc2NoZW1hIG5hbWUgaXMiK3RoaXMuc2NoZW1hX25hbWUpOwogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgIC4uLm1hcEdldHRlcnMoWwogICAgICAgICdnZXRXYXgnCiAgICAgIF0pLAogICAgfSwKICAgIG1ldGhvZHM6ewogICAgICAgIGFzeW5jIENyZWF0ZUFzc2V0cygpewogICAgICAgICAgICB2YXIgYXJyYXk9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiaXRlbS1uYW1lIikKICAgICAgICAgICAgY29uc29sZS5sb2coYXJyYXkpOwogICAgICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuaW1tdXRhYmxlX2RhdGEpOwogICAgICAgICAgICBmb3IodmFyIGo9MDtqPGFycmF5Lmxlbmd0aDtqKyspewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJ0aGlzIGlzIGEgYXJyYXkiK2FycmF5W2pdLnBsYWNlaG9sZGVyKTsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhhcnJheVtqXS5uYW1lKQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJ0aGlzIGlzIGEgYXJyYXkiK2FycmF5W2pdLnZhbHVlKTsKICAgICAgICAgICAgICAgICAgICBpZihhcnJheVtqXS5wbGFjZWhvbGRlcj09ImltYWdlIil7CiAgICAgICAgICAgICAgICAgICAgICAgIGFycmF5W2pdLnBsYWNlaG9sZGVyPSJzdHJpbmciCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGFycmF5W2pdLnZhbHVlKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgIGlmKGFycmF5W2pdLnZhbHVlIT0iIil7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW1tdXRhYmxlX2RhdGEucHVzaCh7ImtleSI6YXJyYXlbal0ubmFtZSwidmFsdWUiOlthcnJheVtqXS5wbGFjZWhvbGRlciwgYXJyYXlbal0udmFsdWVdfSkKICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uc29sZS5sb2coInRoaXMgaXMgIit0aGlzLmltbXV0YWJsZV9kYXRhKTsKICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5pbW11dGFibGVfZGF0YSk7CiAgICAgICAgICAgIGlmKCF0aGlzLmdldFdheC5hcGkpewogICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coIk5lZWQgdG8gbG9naW4gZmlyc3QiKQogICAgICAgICAgIH0gCiAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgdGhpcy5yZXN1bHQ9YXdhaXQgdGhpcy5nZXRXYXguYXBpLnRyYW5zYWN0KHsKICAgICAgICAgICAgICAgICAgIGFjdGlvbnM6W3sKICAgICAgICAgICAgICAgICAgICBhY2NvdW50OiAnYXRvbWljYXNzZXRzJywKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbWludGFzc2V0JywKICAgICAgICAgICAgICAgICAgICBhdXRob3JpemF0aW9uOiBbewogICAgICAgICAgICAgICAgICAgICAgICBhY3RvcjogdGhpcy5nZXRXYXgudXNlckFjY291bnQsCiAgICAgICAgICAgICAgICAgICAgICAgIHBlcm1pc3Npb246J2FjdGl2ZScsCiAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAgICAgICAgICBhdXRob3JpemVkX21pbnRlcjp0aGlzLmdldFdheC51c2VyQWNjb3VudCwKICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvbl9uYW1lOnRoaXMuY29sbGVjdGlvbl9uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICBpbW11dGFibGVfZGF0YTp0aGlzLmltbXV0YWJsZV9kYXRhLAogICAgICAgICAgICAgICAgICAgICAgICBtdXRhYmxlX2RhdGE6W10sCiAgICAgICAgICAgICAgICAgICAgICAgIG5ld19hc3NldF9vd25lcjp0aGlzLkFzc2V0T3duZXIsCiAgICAgICAgICAgICAgICAgICAgICAgIHNjaGVtYV9uYW1lOnRoaXMuc2NoZW1hX25hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlX2lkOi0xLAogICAgICAgICAgICAgICAgICAgICAgICB0b2tlbnNfdG9fYmFjazpbCgogICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgIH0sewogICAgICAgICAgICAgICAgICAgYmxvY2tzQmVoaW5kOiAzLAogICAgICAgICAgICAgICAgICAgZXhwaXJlU2Vjb25kczogMzAKICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgfQogICAgICAgICAgIGNhdGNoKGUpewogICAgICAgICAgICAgICB0aGlzLnJlc3VsdD1lCiAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpCiAgICAgICAgICAgfSAKICAgICAgICB9CiAgICB9LAp9Cgo="},{"version":3,"sources":["CreateAssets.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateAssets.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <p>name is</p>\n        <p>{{collection_name}}</p>\n        <input v-model=\"AssetOwner\" placeholder=\"Account Name\"><br/>\n        <input v-model=\"NumberOfCopies\" placeholder=\"Number between 1-10\"><br/>\n        <input v-model=\"Template\" placeholder=\"Template\"><br/>\n        {{ attribute_table }}\n         <div v-for=\"(item) in attribute_table\" :key=\"item.name\">\n            {{item.name}}:<td><input :id=item.type class=\"item-name\" :name=item.name :placeholder=item.type></td>\n        </div>\n        <button class=\"button btn-primary\" @click=\"CreateAssets()\">Create Asset</button>\n    </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport gql from 'graphql-tag';\n\nexport default {\n   \n    data(){\n        return {\n            immutable_data:[],\n            schema_name:\"\",\n            AssetOwner:\"\",\n            NumberOfCopies:\"\",\n            Template:\"\",\n            attribute_table:this.data,\n        }\n    },\n    apollo:{\n        attribute_table: {\n            query: gql`query collectionSchema($schema_name: String){\n                    atomicassets_schemas_aggregate(where: {schema_name: {_eq: $schema_name}}) {\n                        nodes {\n                            format\n                        }\n                    }\n                }`,\n                variables(){\n                        return {\n                            schema_name: this.schema_name\n                        }\n                }, \n                update: data => data.atomicassets_schemas_aggregate.nodes[0].format,\n\n            }\n                  \n\n    },\n    beforeMount() {\n      this.collection_name = this.$route.params.collectname;\n      this.schema_name=this.$route.params.schemaName\n      console.log(\"collection name is\" + this.collection_name);\n      console.log(\"the schema name is\"+this.schema_name);\n    },\n    computed: {\n      ...mapGetters([\n        'getWax'\n      ]),\n    },\n    methods:{\n        async CreateAssets(){\n            var array=document.getElementsByClassName(\"item-name\")\n            console.log(array);\n            //console.log(this.immutable_data);\n            for(var j=0;j<array.length;j++){\n                    console.log(\"this is a array\"+array[j].placeholder);\n                    console.log(array[j].name)\n                    console.log(\"this is a array\"+array[j].value);\n                    if(array[j].placeholder==\"image\"){\n                        array[j].placeholder=\"string\"\n                        console.log(array[j].value);\n                    }\n                     if(array[j].value!=\"\"){\n                        this.immutable_data.push({\"key\":array[j].name,\"value\":[array[j].placeholder, array[j].value]})\n                     }\n                 }\n            console.log(\"this is \"+this.immutable_data);\n            console.log(this.immutable_data);\n            if(!this.getWax.api){\n               return console.log(\"Need to login first\")\n           } \n           try {\n               this.result=await this.getWax.api.transact({\n                   actions:[{\n                    account: 'atomicassets',\n                    name: 'mintasset',\n                    authorization: [{\n                        actor: this.getWax.userAccount,\n                        permission:'active',\n                    }],\n                    data: {\n                        authorized_minter:this.getWax.userAccount,\n                        collection_name:this.collection_name,\n                        immutable_data:this.immutable_data,\n                        mutable_data:[],\n                        new_asset_owner:this.AssetOwner,\n                        schema_name:this.schema_name,\n                        template_id:-1,\n                        tokens_to_back:[\n\n                        ]\n                    },\n                }]\n               },{\n                   blocksBehind: 3,\n                   expireSeconds: 30\n               });\n           }\n           catch(e){\n               this.result=e\n               console.log(e)\n           } \n        }\n    },\n}\n\n</script>"]}]}