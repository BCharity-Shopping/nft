{"remainingRequest":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateTemplate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateTemplate.vue","mtime":1605915650589},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgIAogICAgbmFtZTonQ3JlYXRlVGVtcGxhdGUnLAogICAgCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgY29sbGVjdGlvbl9uYW1lOiIiLAogICAgICAgICAgICBzY2hlbWFfbmFtZToiIiwKICAgICAgICAgICAgTWF4U3VwcGx5OiIiLAogICAgICAgICAgICBCdXJuZWQ6ZmFsc2UsCiAgICAgICAgICAgIFRyYW5zZmVyZWQ6ZmFsc2UsCiAgICAgICAgICAgIGltbXV0YWJsZV9kYXRhOltdLAogICAgICAgIH0KICAgIH0sCiAgICBhcG9sbG86ewogICAgICAgIGF0dHJpYnV0ZV90YWJsZTogewogICAgICAgICAgICBxdWVyeTogZ3FsYHF1ZXJ5IGNvbGxlY3Rpb25TY2hlbWEoJHNjaGVtYV9uYW1lOiBTdHJpbmcpewogICAgICAgICAgICAgICAgICAgIGF0b21pY2Fzc2V0c19zY2hlbWFzX2FnZ3JlZ2F0ZSh3aGVyZToge3NjaGVtYV9uYW1lOiB7X2VxOiAkc2NoZW1hX25hbWV9fSkgewogICAgICAgICAgICAgICAgICAgICAgICBub2RlcyB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXQKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH1gLAogICAgICAgICAgICAgICAgdmFyaWFibGVzKCl7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWFfbmFtZTogdGhpcy5zY2hlbWFfbmFtZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHVwZGF0ZTogZGF0YSA9PiBkYXRhLmF0b21pY2Fzc2V0c19zY2hlbWFzX2FnZ3JlZ2F0ZS5ub2Rlc1swXS5mb3JtYXQsCgogICAgICAgICAgICB9CiAgICB9LAogICAgCiAgICBiZWZvcmVNb3VudCgpIHsKICAgICAgdGhpcy5jb2xsZWN0aW9uX25hbWUgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuY29sbGVjdG5hbWU7CiAgICAgIHRoaXMuc2NoZW1hX25hbWU9dGhpcy4kcm91dGUucGFyYW1zLnNjaGVtYU5hbWU7CiAgICB9LAogICAgY29tcHV0ZWQ6ewogICAgLi4ubWFwR2V0dGVycyhbCiAgICAgICAgJ2dldFdheCcKICAgICAgXSksCiAgICB9LAogICAgCiAgICAKICAgIG1ldGhvZHM6ewogICAgICAgIGFzeW5jIENyZWF0ZVRlbXBsYXRlKCl7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJjb2xsZWN0aW9uIG5hbWUgaXMgIit0aGlzLmNvbGxlY3Rpb25fbmFtZSk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJzY2hlbWEgbmFtZSBpcyAiK3RoaXMuc2NoZW1hX25hbWUpOwogICAgICAgICAgICBjb25zb2xlLmxvZygiYXV0aG9yaXplZCBjcmVhdG9yIGlzICIrdGhpcy5nZXRXYXgudXNlckFjY291bnQpOwogICAgICAgICAgICBjb25zb2xlLmxvZygiYnVybmFibGUgaXMgIit0aGlzLkJ1cm5lZCk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJjb2xsZWN0aW9uIG5hbWUgaXMgIit0aGlzLmNvbGxlY3Rpb25fbmFtZSk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJtYXggc3VwcGx5IGlzICIrdGhpcy5NYXhTdXBwbHkpOwogICAgICAgICAgICBjb25zb2xlLmxvZygiVHJhbnNmZXJhYmxlIGlzICIrdGhpcy5UcmFuc2ZlcmVkKTsKCiAgICAgICAgICAgIHRoaXMuaW1tdXRhYmxlX2RhdGE9W107CiAgICAgICAgICAgIHZhciBhcnJheT1kb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJpdGVtLW5hbWUiKQogICAgICAgICAgICBjb25zb2xlLmxvZyhhcnJheSk7CiAgICAgICAgICAgIGZvcih2YXIgaj0wO2o8YXJyYXkubGVuZ3RoO2orKyl7CiAgICAgICAgICAgICAgICBpZihhcnJheVtqXS5wbGFjZWhvbGRlcj09ImltYWdlIil7CiAgICAgICAgICAgICAgICAgICAgYXJyYXlbal0ucGxhY2Vob2xkZXI9InN0cmluZyIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmKGFycmF5W2pdLnZhbHVlIT0iIil7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbW11dGFibGVfZGF0YS5wdXNoKHsia2V5IjphcnJheVtqXS5uYW1lLCJ2YWx1ZSI6W2FycmF5W2pdLnBsYWNlaG9sZGVyLCBhcnJheVtqXS52YWx1ZV19KQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuaW1tdXRhYmxlX2RhdGEpOwogICAgICAgICAgICBpZighdGhpcy5nZXRXYXguYXBpKXsKICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKCJOZWVkIHRvIGxvZ2luIGZpcnN0IikKICAgICAgICAgICAgfSAKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgdGhpcy5yZXN1bHQ9YXdhaXQgdGhpcy5nZXRXYXguYXBpLnRyYW5zYWN0KHsKICAgICAgICAgICAgICAgICAgIGFjdGlvbnM6W3sKICAgICAgICAgICAgICAgICAgICBhY2NvdW50OiAnYXRvbWljYXNzZXRzJywKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnY3JlYXRldGVtcGwnLAogICAgICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246IFt7CiAgICAgICAgICAgICAgICAgICAgICAgIGFjdG9yOiB0aGlzLmdldFdheC51c2VyQWNjb3VudCwKICAgICAgICAgICAgICAgICAgICAgICAgcGVybWlzc2lvbjonYWN0aXZlJywKICAgICAgICAgICAgICAgICAgICB9XSwKICAgICAgICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGF1dGhvcml6ZWRfY3JlYXRvcjp0aGlzLmdldFdheC51c2VyQWNjb3VudCwKICAgICAgICAgICAgICAgICAgICAgICAgYnVybmFibGU6dGhpcy5CdXJuZWQsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25fbmFtZTp0aGlzLmNvbGxlY3Rpb25fbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgaW1tdXRhYmxlX2RhdGE6dGhpcy5pbW11dGFibGVfZGF0YSwKICAgICAgICAgICAgICAgICAgICAgICAgbWF4X3N1cHBseTp0aGlzLk1heFN1cHBseSwKICAgICAgICAgICAgICAgICAgICAgICAgc2NoZW1hX25hbWU6dGhpcy5zY2hlbWFfbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmZXJhYmxlOnRoaXMuVHJhbnNmZXJlZCwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgfSx7CiAgICAgICAgICAgICAgICAgICBibG9ja3NCZWhpbmQ6IDMsCiAgICAgICAgICAgICAgICAgICBleHBpcmVTZWNvbmRzOiAzMAogICAgICAgICAgICAgICB9KTsKICAgICAgICAgICB9CiAgICAgICAgICAgY2F0Y2goZSl7CiAgICAgICAgICAgICAgIHRoaXMucmVzdWx0PWUKICAgICAgICAgICAgICAgY29uc29sZS5sb2coZSkKICAgICAgICAgICB9IAogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["CreateTemplate.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateTemplate.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <h1>Create Template</h1>\n        Maximum Supply(number)<input v-model=\"MaxSupply\" placeholder=\"Max Supply\"><br/>\n        Asset can be burned:<input type=\"checkbox\" v-model=\"Burned\" v-bind:true-value=true v-bind:false-value=false>&nbsp;&nbsp;\n        Asset can be Transfered: <input type=\"checkbox\" v-model=\"Transfered\" v-bind:true-value=true v-bind:false-value=false>\n        <div v-for=\"(item) in attribute_table\" :key=\"item.name\">\n            {{item.name}}:<td><input :id=item.type class=\"item-name\" :name=item.name :placeholder=item.type></td>\n        </div>\n        <button class=\"button btn-primary\" @click=\"CreateTemplate()\">Create Template</button>\n    </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport gql from 'graphql-tag';\n\nexport default {\n   \n    name:'CreateTemplate',\n    \n    data(){\n        return {\n            collection_name:\"\",\n            schema_name:\"\",\n            MaxSupply:\"\",\n            Burned:false,\n            Transfered:false,\n            immutable_data:[],\n        }\n    },\n    apollo:{\n        attribute_table: {\n            query: gql`query collectionSchema($schema_name: String){\n                    atomicassets_schemas_aggregate(where: {schema_name: {_eq: $schema_name}}) {\n                        nodes {\n                            format\n                        }\n                    }\n                }`,\n                variables(){\n                        return {\n                            schema_name: this.schema_name\n                        }\n                }, \n                update: data => data.atomicassets_schemas_aggregate.nodes[0].format,\n\n            }\n    },\n    \n    beforeMount() {\n      this.collection_name = this.$route.params.collectname;\n      this.schema_name=this.$route.params.schemaName;\n    },\n    computed:{\n    ...mapGetters([\n        'getWax'\n      ]),\n    },\n    \n    \n    methods:{\n        async CreateTemplate(){\n            console.log(\"collection name is \"+this.collection_name);\n            console.log(\"schema name is \"+this.schema_name);\n            console.log(\"authorized creator is \"+this.getWax.userAccount);\n            console.log(\"burnable is \"+this.Burned);\n            console.log(\"collection name is \"+this.collection_name);\n            console.log(\"max supply is \"+this.MaxSupply);\n            console.log(\"Transferable is \"+this.Transfered);\n\n            this.immutable_data=[];\n            var array=document.getElementsByClassName(\"item-name\")\n            console.log(array);\n            for(var j=0;j<array.length;j++){\n                if(array[j].placeholder==\"image\"){\n                    array[j].placeholder=\"string\"\n                }\n                if(array[j].value!=\"\"){\n                    this.immutable_data.push({\"key\":array[j].name,\"value\":[array[j].placeholder, array[j].value]})\n                }\n            }\n            console.log(this.immutable_data);\n            if(!this.getWax.api){\n               return console.log(\"Need to login first\")\n            } \n            try {\n               this.result=await this.getWax.api.transact({\n                   actions:[{\n                    account: 'atomicassets',\n                    name: 'createtempl',\n                    authorization: [{\n                        actor: this.getWax.userAccount,\n                        permission:'active',\n                    }],\n                    data: {\n                        authorized_creator:this.getWax.userAccount,\n                        burnable:this.Burned,\n                        collection_name:this.collection_name,\n                        immutable_data:this.immutable_data,\n                        max_supply:this.MaxSupply,\n                        schema_name:this.schema_name,\n                        transferable:this.Transfered,\n                    },\n                }]\n               },{\n                   blocksBehind: 3,\n                   expireSeconds: 30\n               });\n           }\n           catch(e){\n               this.result=e\n               console.log(e)\n           } \n        }\n    }\n}\n</script>"]}]}