{"remainingRequest":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateAssets.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateAssets.vue","mtime":1605413700417},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9kYXZpZHNoZW4vRGVza3RvcC9CbG9ja0NoYWluL0JjaGFyaXR5LVZlcnNpb24yL2RhdmlkLU1vZGlmaWVkL2JpdGNoYXJpdHktZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvZGF2aWRzaGVuL0Rlc2t0b3AvQmxvY2tDaGFpbi9CY2hhcml0eS1WZXJzaW9uMi9kYXZpZC1Nb2RpZmllZC9iaXRjaGFyaXR5LWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwgZnJvbSAiL1VzZXJzL2Rhdmlkc2hlbi9EZXNrdG9wL0Jsb2NrQ2hhaW4vQmNoYXJpdHktVmVyc2lvbjIvZGF2aWQtTW9kaWZpZWQvYml0Y2hhcml0eS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIjsKCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJxdWVyeSBjb2xsZWN0aW9uU2NoZW1hKCRzY2hlbWFfbmFtZTogU3RyaW5nKXtcbiAgICAgICAgICAgICAgICAgICAgYXRvbWljYXNzZXRzX3NjaGVtYXNfYWdncmVnYXRlKHdoZXJlOiB7c2NoZW1hX25hbWU6IHtfZXE6ICRzY2hlbWFfbmFtZX19KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlcyB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9Il0pOwoKICBfdGVtcGxhdGVPYmplY3QgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgZ3FsIGZyb20gJ2dyYXBocWwtdGFnJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzY2hlbWFfbmFtZTogIiIsCiAgICAgIEFzc2V0T3duZXI6ICIiLAogICAgICBOdW1iZXJPZkNvcGllczogIiIsCiAgICAgIFRlbXBsYXRlOiAiIiwKICAgICAgYXR0cmlidXRlX3RhYmxlOiBbXQogICAgfTsKICB9LAogIGFwb2xsbzogewogICAgYXR0cmlidXRlX3RhYmxlOiB7CiAgICAgIHF1ZXJ5OiBncWwoX3RlbXBsYXRlT2JqZWN0KCkpLAogICAgICB2YXJpYWJsZXM6IHsKICAgICAgICBzY2hlbWFfbmFtZTogJ2RldmlhbnQnCiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmNvbGxlY3Rpb25fbmFtZSA9IHRoaXMuJHJvdXRlLnBhcmFtcy5jb2xsZWN0bmFtZTsKICAgIHRoaXMuc2NoZW1hX25hbWUgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuc2NoZW1hTmFtZTsKICAgIGNvbnNvbGUubG9nKCJjb2xsZWN0aW9uIG5hbWUgaXMiICsgdGhpcy5jb2xsZWN0aW9uX25hbWUpOwogICAgY29uc29sZS5sb2coInRoZSBzY2hlbWEgbmFtZSBpcyIgKyB0aGlzLnNjaGVtYV9uYW1lKTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKFsnZ2V0V2F4J10pKSwKICBtZXRob2Q6IHsKICAgIENyZWF0ZUFzc2V0czogZnVuY3Rpb24gQ3JlYXRlQXNzZXRzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIga2V5OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGZvciAoa2V5IGluIF90aGlzLnJvd3MpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuYXR0cmlidXRlX3RhYmxlLnB1c2goewogICAgICAgICAgICAgICAgICAgICJuYW1lIjogX3RoaXMucm93c1trZXldLm5hbWUsCiAgICAgICAgICAgICAgICAgICAgInR5cGUiOiBfdGhpcy5yb3dzW2tleV0udHlwZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiaXQgaXMgIiArIF90aGlzLmNvbGxlY3Rpb25OYW1lKTsKCiAgICAgICAgICAgICAgICBpZiAoX3RoaXMuZ2V0V2F4LmFwaSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgY29uc29sZS5sb2coIk5lZWQgdG8gbG9naW4gZmlyc3QiKSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA0OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuZ2V0V2F4LmFwaS50cmFuc2FjdCh7CiAgICAgICAgICAgICAgICAgIGFjdGlvbnM6IFt7CiAgICAgICAgICAgICAgICAgICAgYWNjb3VudDogJ2F0b21pY2Fzc2V0cycsCiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2NyZWF0ZXNjaGVtYScsCiAgICAgICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogW3sKICAgICAgICAgICAgICAgICAgICAgIGFjdG9yOiBfdGhpcy5nZXRXYXgudXNlckFjY291bnQsCiAgICAgICAgICAgICAgICAgICAgICBwZXJtaXNzaW9uOiAnYWN0aXZlJwogICAgICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgICAgICAgIGF1dGhvcml6ZWRfbWludGVyOiBfdGhpcy5nZXRXYXgudXNlckFjY291bnQsCiAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uX25hbWU6IF90aGlzLmNvbGxlY3Rpb25fbmFtZSwKICAgICAgICAgICAgICAgICAgICAgIGltbXV0YWJsZV9kYXRhOiBbXSwKICAgICAgICAgICAgICAgICAgICAgIG11dGFibGVfZGF0YTogW10sCiAgICAgICAgICAgICAgICAgICAgICBzY2hlbWFfZm9ybWF0OiBfdGhpcy5zY2hlbWFfbmFtZSwKICAgICAgICAgICAgICAgICAgICAgIG5ld19hc3NldF9vd25lcjogX3RoaXMuQXNzZXRPd25lciwKICAgICAgICAgICAgICAgICAgICAgIHNjaGVtYV9uYW1lOiBfdGhpcy5TY2hlbWFfbmFtZSwKICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlX2lkOiAtMSwKICAgICAgICAgICAgICAgICAgICAgIHRva2VuX3RvX2JhY2s6IFtdCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICBibG9ja3NCZWhpbmQ6IDMsCiAgICAgICAgICAgICAgICAgIGV4cGlyZVNlY29uZHM6IDMwCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX3RoaXMucmVzdWx0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEwOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSg0KTsKICAgICAgICAgICAgICAgIF90aGlzLnJlc3VsdCA9IF9jb250ZXh0LnQwOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1s0LCAxMF1dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["CreateAssets.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,GAAA,MAAA,aAAA;AAEA,eAAA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,EAFA;AAGA,MAAA,cAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,EAJA;AAKA,MAAA,eAAA,EAAA;AALA,KAAA;AAOA,GAVA;AAWA,EAAA,MAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,KAAA,EAAA,GAAA,mBADA;AAQA,MAAA,SAAA,EAAA;AACA,QAAA,WAAA,EAAA;AADA;AARA;AADA,GAXA;AAyBA,EAAA,OAzBA,qBAyBA;AACA,SAAA,eAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,WAAA;AACA,SAAA,WAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,UAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,uBAAA,KAAA,eAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,uBAAA,KAAA,WAAA;AACA,GA9BA;AA+BA,EAAA,QAAA,oBACA,UAAA,CAAA,CACA,QADA,CAAA,CADA,CA/BA;AAqCA,EAAA,MAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,qBAAA,GAAA,IAAA,KAAA,CAAA,IAAA,EAAA;AACA,kBAAA,KAAA,CAAA,eAAA,CAAA,IAAA,CAAA;AAAA,4BAAA,KAAA,CAAA,IAAA,CAAA,GAAA,EAAA,IAAA;AAAA,4BAAA,KAAA,CAAA,IAAA,CAAA,GAAA,EAAA;AAAA,mBAAA;AACA;;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,WAAA,KAAA,CAAA,cAAA;;AAJA,oBAKA,KAAA,CAAA,MAAA,CAAA,GALA;AAAA;AAAA;AAAA;;AAAA,iDAMA,OAAA,CAAA,GAAA,CAAA,qBAAA,CANA;;AAAA;AAAA;AAAA;AAAA,uBASA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,QAAA,CAAA;AACA,kBAAA,OAAA,EAAA,CAAA;AACA,oBAAA,OAAA,EAAA,cADA;AAEA,oBAAA,IAAA,EAAA,cAFA;AAGA,oBAAA,aAAA,EAAA,CAAA;AACA,sBAAA,KAAA,EAAA,KAAA,CAAA,MAAA,CAAA,WADA;AAEA,sBAAA,UAAA,EAAA;AAFA,qBAAA,CAHA;AAOA,oBAAA,IAAA,EAAA;AACA,sBAAA,iBAAA,EAAA,KAAA,CAAA,MAAA,CAAA,WADA;AAEA,sBAAA,eAAA,EAAA,KAAA,CAAA,eAFA;AAGA,sBAAA,cAAA,EAAA,EAHA;AAIA,sBAAA,YAAA,EAAA,EAJA;AAKA,sBAAA,aAAA,EAAA,KAAA,CAAA,WALA;AAMA,sBAAA,eAAA,EAAA,KAAA,CAAA,UANA;AAOA,sBAAA,WAAA,EAAA,KAAA,CAAA,WAPA;AAQA,sBAAA,WAAA,EAAA,CAAA,CARA;AASA,sBAAA,aAAA,EAAA;AATA;AAPA,mBAAA;AADA,iBAAA,EAsBA;AACA,kBAAA,YAAA,EAAA,CADA;AAEA,kBAAA,aAAA,EAAA;AAFA,iBAtBA,CATA;;AAAA;AASA,gBAAA,KAAA,CAAA,MATA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqCA,gBAAA,KAAA,CAAA,MAAA;AACA,gBAAA,OAAA,CAAA,GAAA;;AAtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCA;AAzCA;AArCA,CAAA","sourcesContent":["<template>\n    <div>\n        <p>name is</p>\n        <p>{{schema_name}}</p>\n        <p>{{collection_name}}</p>\n        <input v-model=\"AssetOwner\" placeholder=\"Account Name\"><br/>\n        <input v-model=\"NumberOfCopies\" placeholder=\"Number between 1-10\"><br/>\n        <input v-model=\"Template\" placeholder=\"Template\"><br/>\n        <!--<ApolloQuery :query=\"require('../graphQL/schemaImmuntableMutableData.gql')\" :variables=\"{schema_name:this.schema_name}\">\n            <template v-slot=\"{ result: { data } }\">\n                {{data.atomicassets_schemas[0].format}}\n                <div v-for=\"(item) in data.atomicassets_schemas[0].format\" :key=\"item.name\">\n                    <input type=\"text\" value=\"{{item.name}}\">:{{item.type}}\n                </div>\n            </template>\n        </ApolloQuery>\n        <b-button @click=\"CreateAssets\">Create Collection</b-button>-->\n        {{attribute_table}}\n    </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport gql from 'graphql-tag';\n\nexport default {\n   \n    data(){\n        return {\n            schema_name:\"\",\n            AssetOwner:\"\",\n            NumberOfCopies:\"\",\n            Template:\"\",\n            attribute_table:[],\n        }\n    },\n    apollo:{\n        attribute_table: {\n            query: gql`query collectionSchema($schema_name: String){\n                    atomicassets_schemas_aggregate(where: {schema_name: {_eq: $schema_name}}) {\n                        nodes {\n                            format\n                        }\n                    }\n                }`,\n            variables: {\n                schema_name:'deviant'\n            }\n        }\n    },\n    created() {\n      this.collection_name = this.$route.params.collectname;\n      this.schema_name=this.$route.params.schemaName\n      console.log(\"collection name is\" + this.collection_name);\n      console.log(\"the schema name is\"+this.schema_name);\n    },\n    computed: {\n      ...mapGetters([\n        'getWax'\n      ]),\n    \n    },\n    method:{\n        async CreateAssets(){\n              for(var key in this.rows){\n               this.attribute_table.push({\"name\":this.rows[key].name,\"type\":this.rows[key].type})\n           }\n            console.log(\"it is \"+this.collectionName);\n            if(!this.getWax.api){\n               return console.log(\"Need to login first\")\n           }\n           try {\n               this.result=await this.getWax.api.transact({\n                   actions:[{\n                    account: 'atomicassets',\n                    name: 'createschema',\n                    authorization: [{\n                        actor: this.getWax.userAccount,\n                        permission:'active',\n                    }],\n                    data: {\n                        authorized_minter:this.getWax.userAccount,\n                        collection_name:this.collection_name,\n                        immutable_data:[],\n                        mutable_data:[],\n                        schema_format:this.schema_name,\n                        new_asset_owner:this.AssetOwner,\n                        schema_name:this.Schema_name,\n                        template_id:-1,\n                        token_to_back:[\n\n                        ]\n                    },\n                }]\n               },{\n                   blocksBehind: 3,\n                   expireSeconds: 30\n               });\n           }\n           catch(e){\n               this.result=e\n               console.log(e)\n           } \n        }\n    },\n}\n</script>"],"sourceRoot":"src/components"}]}