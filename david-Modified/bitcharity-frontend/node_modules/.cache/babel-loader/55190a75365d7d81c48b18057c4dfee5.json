{"remainingRequest":"/Users/davidshen/Desktop/BlockChain/bch/david-version2/bitcharity-frontend/node_modules/thread-loader/dist/cjs.js!/Users/davidshen/Desktop/BlockChain/bch/david-version2/bitcharity-frontend/node_modules/babel-loader/lib/index.js!/Users/davidshen/Desktop/BlockChain/bch/david-version2/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/davidshen/Desktop/BlockChain/bch/david-version2/bitcharity-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidshen/Desktop/BlockChain/bch/david-version2/bitcharity-frontend/src/components/NFTPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidshen/Desktop/BlockChain/bch/david-version2/bitcharity-frontend/src/components/NFTPage.vue","mtime":1604795737890},{"path":"/Users/davidshen/Desktop/BlockChain/bch/david-version2/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/bch/david-version2/bitcharity-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/bch/david-version2/bitcharity-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/bch/david-version2/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/bch/david-version2/bitcharity-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2Rhdmlkc2hlbi9EZXNrdG9wL0Jsb2NrQ2hhaW4vYmNoL2RhdmlkLXZlcnNpb24yL2JpdGNoYXJpdHktZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTkZUIEFzc2V0cycsCiAgY29tcG9uZW50czoge30sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoWydnZXRXYXgnXSkpLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB3YXg6ICIiLAogICAgICBzdGF0ZTogIiIKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy53YXggPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldFdheDsKICB9Cn07"},{"version":3,"sources":["NFTPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAKA,EAAA,QAAA,oBACA,UAAA,CAAA,CACA,QADA,CAAA,CADA,CALA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA;AAFA,KAAA;AAIA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,SAAA,GAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,MAAA;AACA;AAlBA,CAAA","sourcesContent":["<template>\n  <div>\n      <P>My Collections</p>\n      <v-if>\n        <p>this is {{getWax}}</p>\n      </v-if>\n      <ApolloQuery :query=\"require('../graphQL/collectionsinfo.gql')\" :variables=\"{owner:'kdoaw.wam'}\">\n        <template v-slot=\"{ result: { data } }\">\n          <div v-for=\"(item, index) in data.atomicassets_assets\" :key=\"item.collection_name\">\n            {{ index}}: {{item.collection_name}}\n          </div>\n        </template>\n        </ApolloQuery> \n        <button @click=\"$router.push({path:'/NFT/creator'})\">Create</button>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nexport default {\n    name:'NFT Assets',\n    components:{\n\n    },\n    computed: {\n      ...mapGetters([\n        'getWax'\n      ])\n    },\n    data(){\n      return{\n        wax:\"\",\n        state:\"\"\n      }\n    },\n    mounted(){\n      this.wax = this.$store.getters.getWax\n    },\n}\n</script>"],"sourceRoot":"src/components"}]}