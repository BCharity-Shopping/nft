{"remainingRequest":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/SchemaInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/SchemaInfo.vue","mtime":1609218731046},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1609218723950},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js","mtime":1609218723359},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1609218723950},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js","mtime":1609218730647}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2Rhdmlkc2hlbi9EZXNrdG9wL0Jsb2NrQ2hhaW4vQmNoYXJpdHktVmVyc2lvbjIvZGF2aWQtTW9kaWZpZWQvYml0Y2hhcml0eS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTY2hlbWFJbmZvJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2NoZW1hX25hbWU6ICIiLAogICAgICBjb2xsZWN0aW9uX25hbWU6ICIiCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuc2NoZW1hX25hbWUgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuc2NoZW1hbmFtZTsKICAgIGNvbnNvbGUubG9nKHRoaXMuc2NoZW1hX25hbWUpOwogICAgdGhpcy5jb2xsZWN0aW9uX25hbWUgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuY29sbGVjdGlvbm5hbWU7CiAgICBjb25zb2xlLmxvZyh0aGlzLmNvbGxlY3Rpb25fbmFtZSk7CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKFsnZ2V0V2F4J10pKSwge30sIHsKICAgIHNjaGVtYW5hbWVzOiBmdW5jdGlvbiBzY2hlbWFuYW1lcygpIHsKICAgICAgcmV0dXJuIHRoaXMuc2NoZW1hX25hbWU7CiAgICB9LAogICAgY29sbGVjdGlvbm5hbWVzOiBmdW5jdGlvbiBjb2xsZWN0aW9ubmFtZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLmNvbGxlY3Rpb25uYW1lOwogICAgfQogIH0pCn07"},{"version":3,"sources":["SchemaInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,eAAA,EAAA;AAFA,KAAA;AAIA,GARA;AASA,EAAA,OATA,qBASA;AACA,SAAA,WAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,UAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,WAAA;AACA,SAAA,eAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,cAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,eAAA;AACA,GAdA;AAeA,EAAA,QAAA,kCACA,UAAA,CAAA,CACA,QADA,CAAA,CADA;AAIA,IAAA,WAAA,EAAA,uBAAA;AACA,aAAA,KAAA,WAAA;AACA,KANA;AAOA,IAAA,eAAA,EAAA,2BAAA;AACA,aAAA,KAAA,cAAA;AACA;AATA;AAfA,CAAA","sourcesContent":["<template>\n    <div>\n        <h1>Schema:{{this.schema_name}}</h1>\n        <p>Schema defines which kind of attribute the assets will have. You can add attribute later</p>\n         <ApolloQuery :query=\"require('../graphQL/schemaDetails.gql')\" :variables=\"{schema_name:this.schema_name}\">\n            <template v-slot=\"{ result: { data } }\">\n            <div class=\"container\">\n                <table>\n                    <tr>\n                        <th>Attribute Name</th>\n                        <th>Attribute Type</th>\n                    </tr>\n                    <tr v-for=\"(item) in data.atomicassets_schemas_aggregate.nodes[0].format\" :key=\"item.name\" id=\"accountParent\">\n                        <td><b-card>{{item.name}}</b-card></td>\n                        <td><b-card>{{item.type}}</b-card></td>\n                    </tr>\n                </table>\n            </div>\n            </template>\n            </ApolloQuery> \n        <button class=\"btn btn-primary\" @click=\"$router.push({path:`/creator/${collection_name}/schema/${schema_name}/CreateAssets`})\">Mint Asset</button>&nbsp;&nbsp;\n        <button class=\"btn btn-primary\" @click=\"$router.push({path:`/creator/${collection_name}/schema/${schema_name}/CreateTemplate`})\">Create Template</button>&nbsp;&nbsp;\n    </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex'\nexport default {\n    name:'SchemaInfo',\n    \n    data(){\n        return {\n            schema_name: \"\",\n            collection_name:\"\",\n        }\n    },\n    created() {\n        this.schema_name=this.$route.params.schemaname;\n        console.log(this.schema_name);\n        this.collection_name = this.$route.params.collectionname;\n        console.log(this.collection_name);\n      },\n    computed: {\n      ...mapGetters([\n        'getWax'\n      ]),\n      schemanames:function(){\n          return this.schema_name\n      },\n      collectionnames:function(){\n          return this.collectionname\n      }\n    }\n}\n</script> \n<style scoped>\n     div.container-fluid {\n       text-align:right;\n     }\n     .container {\n        display: flex;\n        flex-wrap: wrap;\n    }\n    div.grid-item{\n        align-content: column;\n        display: inline;\n    }\n    #accountParent{\n       flex-direction:column;\n       margin:14px;\n       justify-content: space-between;\n      \n   }\n</style>\n"],"sourceRoot":"src/components"}]}