{"remainingRequest":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/thread-loader/dist/cjs.js!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateAssets.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateAssets.vue","mtime":1606008441629},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2Rhdmlkc2hlbi9EZXNrdG9wL0Jsb2NrQ2hhaW4vQmNoYXJpdHktVmVyc2lvbjIvZGF2aWQtTW9kaWZpZWQvYml0Y2hhcml0eS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9kYXZpZHNoZW4vRGVza3RvcC9CbG9ja0NoYWluL0JjaGFyaXR5LVZlcnNpb24yL2RhdmlkLU1vZGlmaWVkL2JpdGNoYXJpdHktZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCBmcm9tICIvVXNlcnMvZGF2aWRzaGVuL0Rlc2t0b3AvQmxvY2tDaGFpbi9CY2hhcml0eS1WZXJzaW9uMi9kYXZpZC1Nb2RpZmllZC9iaXRjaGFyaXR5LWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90YWdnZWRUZW1wbGF0ZUxpdGVyYWwiOwoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbInF1ZXJ5IGNvbGxlY3Rpb25TY2hlbWEoJHNjaGVtYV9uYW1lOiBTdHJpbmcpe1xuICAgICAgICAgICAgICAgICAgICBhdG9taWNhc3NldHNfc2NoZW1hc19hZ2dyZWdhdGUod2hlcmU6IHtzY2hlbWFfbmFtZToge19lcTogJHNjaGVtYV9uYW1lfX0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVzIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXRcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0iXSk7CgogIF90ZW1wbGF0ZU9iamVjdCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBncWwgZnJvbSAnZ3JhcGhxbC10YWcnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGltbXV0YWJsZV9kYXRhOiBbXSwKICAgICAgc2NoZW1hX25hbWU6ICIiLAogICAgICBBc3NldE93bmVyOiAiIiwKICAgICAgTnVtYmVyT2ZDb3BpZXM6ICIiLAogICAgICB1c2VfVGVtcGxhdGU6ICJObyBUZW1wbGF0ZSIKICAgIH07CiAgfSwKICBhcG9sbG86IHsKICAgIGF0dHJpYnV0ZV90YWJsZTogewogICAgICBxdWVyeTogZ3FsKF90ZW1wbGF0ZU9iamVjdCgpKSwKICAgICAgdmFyaWFibGVzOiBmdW5jdGlvbiB2YXJpYWJsZXMoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHNjaGVtYV9uYW1lOiB0aGlzLnNjaGVtYV9uYW1lCiAgICAgICAgfTsKICAgICAgfSwKICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoZGF0YSkgewogICAgICAgIHJldHVybiBkYXRhLmF0b21pY2Fzc2V0c19zY2hlbWFzX2FnZ3JlZ2F0ZS5ub2Rlc1swXS5mb3JtYXQ7CiAgICAgIH0KICAgIH0KICB9LAogIGJlZm9yZU1vdW50OiBmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHsKICAgIHRoaXMuY29sbGVjdGlvbl9uYW1lID0gdGhpcy4kcm91dGUucGFyYW1zLmNvbGxlY3RuYW1lOwogICAgdGhpcy5zY2hlbWFfbmFtZSA9IHRoaXMuJHJvdXRlLnBhcmFtcy5zY2hlbWFOYW1lOwogICAgY29uc29sZS5sb2coImNvbGxlY3Rpb24gbmFtZSBpcyIgKyB0aGlzLmNvbGxlY3Rpb25fbmFtZSk7CiAgICBjb25zb2xlLmxvZygidGhlIHNjaGVtYSBuYW1lIGlzIiArIHRoaXMuc2NoZW1hX25hbWUpOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuYXNzZXRfb3duZXIgPSAiIjsKICAgIHRoaXMuY29waWVzID0gIiI7CiAgICB0aGlzLmltbXV0YWJsZV9kYXRhID0gW107CiAgICB0aGlzLnVzZXJfdGVtcGxhdGUgPSAiTm8gVGVtcGxhdGUiOwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoWydnZXRXYXgnXSkpLAogIG1ldGhvZHM6IHsKICAgIENyZWF0ZUFzc2V0czogZnVuY3Rpb24gQ3JlYXRlQXNzZXRzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgYXJyYXksIGo7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKF90aGlzLnVzZV9UZW1wbGF0ZSAhPSAiTm8gVGVtcGxhdGUiKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLnRlbXBsYXRlX2lkID0gX3RoaXMudXNlVGVtcGxhdGU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX3RoaXMuaW1tdXRhYmxlX2RhdGEgPSBbXTsKICAgICAgICAgICAgICAgIGFycmF5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZm9ybWF0LW5hbWUiKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGFycmF5KTsKCiAgICAgICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgYXJyYXkubGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgICAgICAgaWYgKGFycmF5W2pdLnBsYWNlaG9sZGVyID09ICJpbWFnZSIpIHsKICAgICAgICAgICAgICAgICAgICBhcnJheVtqXS5wbGFjZWhvbGRlciA9ICJzdHJpbmciOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGFycmF5W2pdLnZhbHVlKTsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgaWYgKGFycmF5W2pdLnZhbHVlICE9ICIiKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMuaW1tdXRhYmxlX2RhdGEucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICAia2V5IjogYXJyYXlbal0uaWQsCiAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiBbYXJyYXlbal0ucGxhY2Vob2xkZXIsIGFycmF5W2pdLnZhbHVlXQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKF90aGlzLmdldFdheC5hcGkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGNvbnNvbGUubG9nKCJOZWVkIHRvIGxvZ2luIGZpcnN0IikpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNzsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5nZXRXYXguYXBpLnRyYW5zYWN0KHsKICAgICAgICAgICAgICAgICAgYWN0aW9uczogW3sKICAgICAgICAgICAgICAgICAgICBhY2NvdW50OiAnYXRvbWljYXNzZXRzJywKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbWludGFzc2V0JywKICAgICAgICAgICAgICAgICAgICBhdXRob3JpemF0aW9uOiBbewogICAgICAgICAgICAgICAgICAgICAgYWN0b3I6IF90aGlzLmdldFdheC51c2VyQWNjb3VudCwKICAgICAgICAgICAgICAgICAgICAgIHBlcm1pc3Npb246ICdhY3RpdmUnCiAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAgICAgICAgYXV0aG9yaXplZF9taW50ZXI6IF90aGlzLmdldFdheC51c2VyQWNjb3VudCwKICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25fbmFtZTogX3RoaXMuY29sbGVjdGlvbl9uYW1lLAogICAgICAgICAgICAgICAgICAgICAgaW1tdXRhYmxlX2RhdGE6IF90aGlzLmltbXV0YWJsZV9kYXRhLAogICAgICAgICAgICAgICAgICAgICAgbXV0YWJsZV9kYXRhOiBbXSwKICAgICAgICAgICAgICAgICAgICAgIG5ld19hc3NldF9vd25lcjogX3RoaXMuQXNzZXRPd25lciwKICAgICAgICAgICAgICAgICAgICAgIHNjaGVtYV9uYW1lOiBfdGhpcy5zY2hlbWFfbmFtZSwKICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlX2lkOiAtMSwKICAgICAgICAgICAgICAgICAgICAgIHRva2Vuc190b19iYWNrOiBbXQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgYmxvY2tzQmVoaW5kOiAzLAogICAgICAgICAgICAgICAgICBleHBpcmVTZWNvbmRzOiAzMAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfdGhpcy5yZXN1bHQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTM7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDcpOwogICAgICAgICAgICAgICAgX3RoaXMucmVzdWx0ID0gX2NvbnRleHQudDA7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzcsIDEzXV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["CreateAssets.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <h1>Create Asset</h1>\n        <div class=\"edit-collection\">\n            <div class=\"grid-container\">\n                <div class=\"grid-item\">\n                    Account Name:<input v-model=\"AssetOwner\" placeholder=\"Account Name\"><br/>\n                </div>\n                <div class=\"grid-item\">\n                    Number of Copies(Number):<input v-model=\"NumberOfCopies\" placeholder=\"Number between 1-10\"><br/>\n                </div>\n                <ApolloQuery :query=\"require('../graphQL/atomicasset_templates.gql')\" :variables=\"{schema_name:this.schema_name,collection_name:this.collection_name}\">\n                    <template v-slot=\"{ result: { loading, error, data } }\">\n                                <div class=\"container-fluid\">\n                                    <div class=\"grid-item\">\n                                        <div v-if=\"loading\" class=\"loading apollo\">Loading...</div>\n                                        <div v-else-if=\"error\" class=\"error apollo\">An error occurred</div>\n                                        <div v-else-if=\"data\" class=\"result apollo\">\n                                            <select id=\"template\" v-model=\"use_Template\" >\n                                                <option value=\"No Template\" selected>No Template</option>\n                                                <option v-for=\"template in data.atomicassets_templates\" :key=\"template.template_id\" :value=\"template.template_id\">\n                                                    #{{template.template_id}} - ({{template.issued_supply}}/{{template.max_supply}}) {{template.immutable_data.name}}\n                                                </option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                            \n                            <div v-if=\"use_Template=='No Template'\">\n                                <div v-for=\"format in data.atomicassets_schemas[0].format\" :key=\"format.name\">\n                                    <div class=\"grid-item\">\n                                        <label :for=\"format.name\">{{format.name}}</label>\n                                        <input :id=\"format.name\" class=\"format-name\" :name=\"format.name\" :placeholder=\"format.type\"> \n                                    </div>\n                                    <br/>\n                                </div>\n                            </div>\n                            \n                            <div v-else>\n                                <div v-for=\"format in data.atomicassets_schemas[0].format\" :key=\"format.name\">\n                                    <div v-for=\"template in data.atomicassets_templates\" :key=\"template.template_id\">\n                                        <div class=\"grid-item\">\n                                            <label v-if=\"template.template_id==use_Template\" :for=\"format.name\">{{format.name}}</label>\n                                            <input v-if=\"template.template_id==use_Template && template.immutable_data[format.name]!=null\" :id=\"format.name\" :placeholder=\"template.immutable_data[format.name]\" disabled>\n                                            <input v-else-if=\"template.template_id==use_Template\" class=\"format-name\" :id=\"format.name\" :placeholder=\"format.type\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                    </template>\n                </ApolloQuery>\n            </div>\n        </div>\n        <button class=\"button btn-primary\" @click=\"CreateAssets()\">Create Asset</button>\n    </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport gql from 'graphql-tag';\n\nexport default {\n   \n    data(){\n        return {\n            immutable_data:[],\n            schema_name:\"\",\n            AssetOwner:\"\",\n            NumberOfCopies:\"\",\n            use_Template:\"No Template\",\n        }\n    },\n    apollo:{\n        attribute_table: {\n            query: gql`query collectionSchema($schema_name: String){\n                    atomicassets_schemas_aggregate(where: {schema_name: {_eq: $schema_name}}) {\n                        nodes {\n                            format\n                        }\n                    }\n                }`,\n                variables(){\n                        return {\n                            schema_name: this.schema_name\n                        }\n                }, \n                update: data => data.atomicassets_schemas_aggregate.nodes[0].format,\n\n            }\n                  \n\n    },\n    beforeMount() {\n      this.collection_name = this.$route.params.collectname;\n      this.schema_name=this.$route.params.schemaName\n      console.log(\"collection name is\" + this.collection_name);\n      console.log(\"the schema name is\"+this.schema_name);\n    },\n    mounted(){\n        this.asset_owner=\"\"\n        this.copies=\"\"\n        this.immutable_data=[]\n        this.user_template=\"No Template\"\n    },\n    computed: {\n      ...mapGetters([\n        'getWax'\n      ]),\n    },\n    methods:{\n        async CreateAssets(){\n            if(this.use_Template!=\"No Template\") {\n                this.template_id = this.useTemplate\n            }\n            this.immutable_data=[];\n            var array=document.getElementsByClassName(\"format-name\")\n            console.log(array);\n            for(var j=0;j<array.length;j++){\n                    if(array[j].placeholder==\"image\"){\n                        array[j].placeholder=\"string\"\n                        console.log(array[j].value);\n                    }\n                    if(array[j].value!=\"\"){\n                        this.immutable_data.push({\"key\":array[j].id,\"value\":[array[j].placeholder, array[j].value]})\n                    }\n            }\n            if(!this.getWax.api){\n               return console.log(\"Need to login first\")\n           } \n           try {\n               this.result=await this.getWax.api.transact({\n                   actions:[{\n                    account: 'atomicassets',\n                    name: 'mintasset',\n                    authorization: [{\n                        actor: this.getWax.userAccount,\n                        permission:'active',\n                    }],\n                    data: {\n                        authorized_minter:this.getWax.userAccount,\n                        collection_name:this.collection_name,\n                        immutable_data:this.immutable_data,\n                        mutable_data:[],\n                        new_asset_owner:this.AssetOwner,\n                        schema_name:this.schema_name,\n                        template_id:-1,\n                        tokens_to_back:[\n                        ]\n                    },\n                }]\n               },{\n                   blocksBehind: 3,\n                   expireSeconds: 30\n               });\n           }\n           catch(e){\n               this.result=e\n               console.log(e)\n           } \n        }\n    },\n}\n\n</script>\n<style scoped>\n    .large-card {\n        width: 180px;\n        border-radius: 20px;\n        box-shadow: 0 3px 20px rgba(0,0,0,.4);\n        display: inline-block;\n        height: fit-content;\n        margin: 15px 10px;\n        padding: 0;\n        position: relative;\n        text-align: left;\n        text-align: initial;\n    }\n    div.container-fluid {\n       text-align:right;\n   }\n   div.grid-container {\n       display: grid;\n       grid-template-columns:auto auto auto;\n       padding: 2px;\n       align-content: column;\n   }\n   #accountParent{\n       display:flex;\n       flex-direction:row;\n       margin:14px;\n       justify-content: space-between;\n    }\n   #authorizedaccount {\n        width:50%;\n       height:500px\n\n   }\n   #notifyaccounts {\n       width:50%;\n   }\n</style>"],"sourceRoot":"src/components"}]}