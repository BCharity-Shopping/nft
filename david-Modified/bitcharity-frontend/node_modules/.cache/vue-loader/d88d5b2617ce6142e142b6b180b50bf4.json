{"remainingRequest":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CollectionInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CollectionInfo.vue","mtime":1605284644761},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCcKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKXsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBjb2xsZWN0aW9ubmFtZTogIiIKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgdGhpcy5jb2xsZWN0aW9ubmFtZSA9IHRoaXMuJHJvdXRlLnBhcmFtcy5jb2xsZWN0aW9ubmFtZTsKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAuLi5tYXBHZXR0ZXJzKFsKICAgICAgICAnZ2V0V2F4JwogICAgICBdKSwKICAgICAgY29sbGVjdG5uYW1lOmZ1bmN0aW9uKCl7CiAgICAgICAgICByZXR1cm4gdGhpcy5jb2xsZWN0aW9ubmFtZQogICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpewogICAgICB0aGlzLndheCA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0V2F4CiAgICB9LAogICAgCn0K"},{"version":3,"sources":["CollectionInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"CollectionInfo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <p>it is :{{collectionname}}</p>\n        <ApolloQuery :query=\"require('../graphQL/collectionDetails.gql')\" :variables=\"{collection_name:collectionname}\">\n            <template v-slot=\"{ result: { data } }\">\n                {{data}}\n            </template>\n            <button @click=\"$router.push({path:`/creator/${collectnname}/createSchema`})\">CreatSchema</button><br /><br />\n        </ApolloQuery> \n        <ApolloQuery :query=\"require('../graphQL/collectionSchema.gql')\" :variables=\"{collection_name:collectionname}\">\n            <template v-slot=\"{ result: { data } }\">\n                {{data}}\n                <div v-for=\"(item,index) in data.atomicassets_schemas\" :key=\"item.schema_name\">\n                    {{index}}: {{item.schema_name}}\n                    <button class=\"btn btn-primary\" @click=\"$router.push({path:`/creator/${collectnname}/schema/${item.schema_name}`})\">Details</button>&nbsp;&nbsp;\n                </div>\n            </template>\n        </ApolloQuery> \n    </div>\n</template>\n\n<script>\n\nimport { mapGetters } from 'vuex'\n\nexport default {\n    data(){\n        return {\n            collectionname: \"\"\n        }\n    },\n    created() {\n      this.collectionname = this.$route.params.collectionname;\n    },\n    computed: {\n      ...mapGetters([\n        'getWax'\n      ]),\n      collectnname:function(){\n          return this.collectionname\n      }\n    },\n    mounted(){\n      this.wax = this.$store.getters.getWax\n    },\n    \n}\n</script>"]}]}