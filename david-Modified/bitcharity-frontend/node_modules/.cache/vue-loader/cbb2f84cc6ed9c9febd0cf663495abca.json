{"remainingRequest":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateAssets.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateAssets.vue","mtime":1605392787384},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgIAogICAgZGF0YSgpewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGNvbGxlY3Rpb25uYW1lOiAiIiwKICAgICAgICAgICAgQXNzZXRPd25lcjoiIiwKICAgICAgICAgICAgTnVtYmVyT2ZDb3BpZXM6IiIsCiAgICAgICAgICAgIFRlbXBsYXRlOiIiLAogICAgICAgICAgICBhdHRyaWJ1dGVfdGFibGU6W10sCiAgICAgICAgfQogICAgfSwKICAgIGFwb2xsbzp7CiAgICAgICAgYXR0cmlidXRlX3RhYmxlOiB7CiAgICAgICAgICAgIHF1ZXJ5OiBncWxgcXVlcnkgY29sbGVjdGlvblNjaGVtYSgkc2NoZW1hX25hbWU6IFN0cmluZyl7CiAgICAgICAgICAgICAgICAgICAgYXRvbWljYXNzZXRzX3NjaGVtYXNfYWdncmVnYXRlKHdoZXJlOiB7c2NoZW1hX25hbWU6IHtfZXE6ICRzY2hlbWFfbmFtZX19KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVzIHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9YCwKICAgICAgICAgICAgdmFyaWFibGVzOiB7CiAgICAgICAgICAgICAgICBzY2hlbWFfbmFtZTp0aGlzLnNjaGVtYV9uYW1lCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgCiAgICAgIHRoaXMuc2NoZW1hX25hbWU9dGhpcy4kcm91dGUucGFyYW1zLnNjaGVtYW5hbWU7CiAgICAgIHRoaXMuY29sbGVjdGlvbl9uYW1lID0gdGhpcy4kcm91dGUucGFyYW1zLmNvbGxlY3Rpb25uYW1lOwogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgIC4uLm1hcEdldHRlcnMoWwogICAgICAgICdnZXRXYXgnCiAgICAgIF0pLAogICAgICBjb2xsZWN0bm5hbWU6ZnVuY3Rpb24oKXsKICAgICAgICAgIHJldHVybiB0aGlzLmNvbGxlY3Rpb25uYW1lCiAgICAgIH0KICAgIH0sCiAgICBtZXRob2Q6ewogICAgICAgIGFzeW5jIENyZWF0ZUFzc2V0cygpewogICAgICAgICAgICAgIGZvcih2YXIga2V5IGluIHRoaXMucm93cyl7CiAgICAgICAgICAgICAgIHRoaXMuc2NoZW1hX2Zvcm1hdC5wdXNoKHsibmFtZSI6dGhpcy5yb3dzW2tleV0ubmFtZSwidHlwZSI6dGhpcy5yb3dzW2tleV0udHlwZX0pCiAgICAgICAgICAgfQogICAgICAgICAgICBjb25zb2xlLmxvZygiaXQgaXMgIit0aGlzLmNvbGxlY3Rpb25OYW1lKTsKICAgICAgICAgICAgaWYoIXRoaXMuZ2V0V2F4LmFwaSl7CiAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZygiTmVlZCB0byBsb2dpbiBmaXJzdCIpCiAgICAgICAgICAgfQogICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgIHRoaXMucmVzdWx0PWF3YWl0IHRoaXMuZ2V0V2F4LmFwaS50cmFuc2FjdCh7CiAgICAgICAgICAgICAgICAgICBhY3Rpb25zOlt7CiAgICAgICAgICAgICAgICAgICAgYWNjb3VudDogJ2F0b21pY2Fzc2V0cycsCiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2NyZWF0ZXNjaGVtYScsCiAgICAgICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogW3sKICAgICAgICAgICAgICAgICAgICAgICAgYWN0b3I6IHRoaXMuZ2V0V2F4LnVzZXJBY2NvdW50LAogICAgICAgICAgICAgICAgICAgICAgICBwZXJtaXNzaW9uOidhY3RpdmUnLAogICAgICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgICAgICAgICAgYXV0aG9yaXplZF9taW50ZXI6dGhpcy5nZXRXYXgudXNlckFjY291bnQsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25fbmFtZTp0aGlzLmNvbGxlY3Rpb25fbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgaW1tdXRhYmxlX2RhdGE6W10sCiAgICAgICAgICAgICAgICAgICAgICAgIG11dGFibGVfZGF0YTpbXSwKICAgICAgICAgICAgICAgICAgICAgICAgc2NoZW1hX2Zvcm1hdDp0aGlzLnNjaGVtYV9uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICBuZXdfYXNzZXRfb3duZXI6dGhpcy5Bc3NldE93bmVyLAogICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWFfbmFtZTp0aGlzLlNjaGVtYV9uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZV9pZDotMSwKICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5fdG9fYmFjazpbCgogICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgIH0sewogICAgICAgICAgICAgICAgICAgYmxvY2tzQmVoaW5kOiAzLAogICAgICAgICAgICAgICAgICAgZXhwaXJlU2Vjb25kczogMzAKICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgfQogICAgICAgICAgIGNhdGNoKGUpewogICAgICAgICAgICAgICB0aGlzLnJlc3VsdD1lCiAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpCiAgICAgICAgICAgfSAKICAgICAgICB9CiAgICB9CiAgICAKfQo="},{"version":3,"sources":["CreateAssets.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"CreateAssets.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        Schema:{{this.schema_name}}\n        collectionname:{{this.collection_name}}<br/>\n        <input v-model=\"AssetOwner\" placeholder=\"Account Name\"><br/>\n        <input v-model=\"NumberOfCopies\" placeholder=\"Number between 1-10\"><br/>\n        <input v-model=\"Template\" placeholder=\"Template\"><br/>\n        <!--<ApolloQuery :query=\"require('../graphQL/schemaImmuntableMutableData.gql')\" :variables=\"{schema_name:this.schema_name}\">\n            <template v-slot=\"{ result: { data } }\">\n                {{data.atomicassets_schemas[0].format}}\n                <div v-for=\"(item) in data.atomicassets_schemas[0].format\" :key=\"item.name\">\n                    <input type=\"text\" value=\"{{item.name}}\">:{{item.type}}\n                </div>\n            </template>\n        </ApolloQuery>\n        <b-button @click=\"CreateAssets\">Create Collection</b-button>-->\n        {{attribute_table}}\n    </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport gql from 'graphql-tag';\n\nexport default {\n   \n    data(){\n        return {\n            collectionname: \"\",\n            AssetOwner:\"\",\n            NumberOfCopies:\"\",\n            Template:\"\",\n            attribute_table:[],\n        }\n    },\n    apollo:{\n        attribute_table: {\n            query: gql`query collectionSchema($schema_name: String){\n                    atomicassets_schemas_aggregate(where: {schema_name: {_eq: $schema_name}}) {\n                        nodes {\n                        format\n                        }\n                    }\n                }`,\n            variables: {\n                schema_name:this.schema_name\n            }\n        }\n    },\n    created() {\n      \n      this.schema_name=this.$route.params.schemaname;\n      this.collection_name = this.$route.params.collectionname;\n    },\n    computed: {\n      ...mapGetters([\n        'getWax'\n      ]),\n      collectnname:function(){\n          return this.collectionname\n      }\n    },\n    method:{\n        async CreateAssets(){\n              for(var key in this.rows){\n               this.schema_format.push({\"name\":this.rows[key].name,\"type\":this.rows[key].type})\n           }\n            console.log(\"it is \"+this.collectionName);\n            if(!this.getWax.api){\n               return console.log(\"Need to login first\")\n           }\n           try {\n               this.result=await this.getWax.api.transact({\n                   actions:[{\n                    account: 'atomicassets',\n                    name: 'createschema',\n                    authorization: [{\n                        actor: this.getWax.userAccount,\n                        permission:'active',\n                    }],\n                    data: {\n                        authorized_minter:this.getWax.userAccount,\n                        collection_name:this.collection_name,\n                        immutable_data:[],\n                        mutable_data:[],\n                        schema_format:this.schema_name,\n                        new_asset_owner:this.AssetOwner,\n                        schema_name:this.Schema_name,\n                        template_id:-1,\n                        token_to_back:[\n\n                        ]\n                    },\n                }]\n               },{\n                   blocksBehind: 3,\n                   expireSeconds: 30\n               });\n           }\n           catch(e){\n               this.result=e\n               console.log(e)\n           } \n        }\n    }\n    \n}\n</script>"]}]}