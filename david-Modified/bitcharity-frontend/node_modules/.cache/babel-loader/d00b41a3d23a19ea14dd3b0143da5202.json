{"remainingRequest":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateSchema.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/src/components/CreateSchema.vue","mtime":1605154222411},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/davidshen/Desktop/BlockChain/Bcharity-Version2/david-Modified/bitcharity-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9kYXZpZHNoZW4vRGVza3RvcC9CbG9ja0NoYWluL0JjaGFyaXR5LVZlcnNpb24yL2RhdmlkLU1vZGlmaWVkL2JpdGNoYXJpdHktZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvZGF2aWRzaGVuL0Rlc2t0b3AvQmxvY2tDaGFpbi9CY2hhcml0eS1WZXJzaW9uMi9kYXZpZC1Nb2RpZmllZC9iaXRjaGFyaXR5LWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsnd2F4JywgJ2Fzc2V0SUQnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcm93czogW10sCiAgICAgIHRpdGxlOiAiIiwKICAgICAgY29sbGVjdGlvbm5hbWU6ICIiLAogICAgICBjb3VudEZpcnN0Ym94SW5wdXRJRDogMCwKICAgICAgY291bnRTZWNvbmRib3hJbnB1dElEOiAwLAogICAgICBTY2hlbWFfbmFtZTogIiIsCiAgICAgIHNjaGVtYV9mb3JtYXQ6IFt7CiAgICAgICAgIm5hbWUiOiAibmFtZSIsCiAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICB9LCB7CiAgICAgICAgIm5hbWUiOiAiaW1nIiwKICAgICAgICAidHlwZSI6ICJpbWFnZSIKICAgICAgfV0KICAgIH07CiAgfSwKICB3YXRjaDoge30sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbJ2dldFdheCddKSksIHt9LCB7CiAgICBjb2xsZWN0aW9uTmFtZTogZnVuY3Rpb24gY29sbGVjdGlvbk5hbWUoKSB7CiAgICAgIHJldHVybiB0aGlzLmNvbGxlY3Rpb25uYW1lOwogICAgfSwKICAgIHNjaGVtYUZvcm1hdDogZnVuY3Rpb24gc2NoZW1hRm9ybWF0KCkgewogICAgICByZXR1cm4gdGhpcy5zY2hlbWFfZm9ybWF0OwogICAgfQogIH0pLAogIG1ldGhvZHM6IHsKICAgIHNpZ25hbENoYW5nZTogZnVuY3Rpb24gc2lnbmFsQ2hhbmdlKGV2dCkgewogICAgICBjb25zb2xlLmxvZygidGhpcyBpcyBjaGFuZ2VkIik7CiAgICAgIHRoaXMuJGVtaXQoImNoYW5nZSIsIGV2dCk7CiAgICB9LAogICAgYWRkUm93OiBmdW5jdGlvbiBhZGRSb3coKSB7CiAgICAgIHZhciBlbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndHInKTsKICAgICAgdGhpcy5yb3dzLnB1c2goewogICAgICAgIG5hbWU6ICIiLAogICAgICAgIHR5cGU6ICIiCiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyh0aGlzLnJvd3MpOwogICAgICByZXR1cm4gZWxlbTsKICAgIH0sCiAgICByZW1vdmVFbGVtZW50OiBmdW5jdGlvbiByZW1vdmVFbGVtZW50KGluZGV4KSB7CiAgICAgIHRoaXMucm93cy5zcGxpY2UoaW5kZXgsIDEpOwogICAgfSwKICAgIHNldEZpbGVuYW1lOiBmdW5jdGlvbiBzZXRGaWxlbmFtZShldmVudCwgcm93KSB7CiAgICAgIHZhciBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOwogICAgICByb3cuZmlsZSA9IGZpbGU7CiAgICB9LAogICAgQ3JlYXRlU2NoZW1hOiBmdW5jdGlvbiBDcmVhdGVTY2hlbWEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBrZXk7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZm9yIChrZXkgaW4gX3RoaXMucm93cykgewogICAgICAgICAgICAgICAgICBfdGhpcy5zY2hlbWFfZm9ybWF0LnB1c2goewogICAgICAgICAgICAgICAgICAgICJuYW1lIjogX3RoaXMucm93c1trZXldLm5hbWUsCiAgICAgICAgICAgICAgICAgICAgInR5cGUiOiBfdGhpcy5yb3dzW2tleV0udHlwZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiaXQgaXMgIiArIF90aGlzLmNvbGxlY3Rpb25OYW1lKTsKCiAgICAgICAgICAgICAgICBpZiAoX3RoaXMuZ2V0V2F4LmFwaSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgY29uc29sZS5sb2coIk5lZWQgdG8gbG9naW4gZmlyc3QiKSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA0OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuZ2V0V2F4LmFwaS50cmFuc2FjdCh7CiAgICAgICAgICAgICAgICAgIGFjdGlvbnM6IFt7CiAgICAgICAgICAgICAgICAgICAgYWNjb3VudDogJ2F0b21pY2Fzc2V0cycsCiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2NyZWF0ZXNjaGVtYScsCiAgICAgICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogW3sKICAgICAgICAgICAgICAgICAgICAgIGFjdG9yOiBfdGhpcy5nZXRXYXgudXNlckFjY291bnQsCiAgICAgICAgICAgICAgICAgICAgICBwZXJtaXNzaW9uOiAnYWN0aXZlJwogICAgICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgICAgICAgIGF1dGhvcml6ZWRfY3JlYXRvcjogX3RoaXMuZ2V0V2F4LnVzZXJBY2NvdW50LAogICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvbl9uYW1lOiBfdGhpcy5jb2xsZWN0aW9uTmFtZSwKICAgICAgICAgICAgICAgICAgICAgIHNjaGVtYV9mb3JtYXQ6IF90aGlzLnNjaGVtYUZvcm1hdCwKICAgICAgICAgICAgICAgICAgICAgIHNjaGVtYV9uYW1lOiBfdGhpcy5TY2hlbWFfbmFtZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgYmxvY2tzQmVoaW5kOiAzLAogICAgICAgICAgICAgICAgICBleHBpcmVTZWNvbmRzOiAzMAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF90aGlzLnJlc3VsdCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oNCk7CiAgICAgICAgICAgICAgICBfdGhpcy5yZXN1bHQgPSBfY29udGV4dC50MDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbNCwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["CreateSchema.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <p>{{getWax}}</p>\n        <P>this is:{{collectionname}}</P>\n        <p>Create Schema</p>\n        <p>Schema_name</p>\n        <input v-model=\"Schema_name\" placeholder=\"Schema name\">\n        <p>Attribute Name</p><br />\n        <p>name</p><br />\n        <p>img</p>\n        <p>Attribute Type</p><br />\n        <p>text</p><br />\n        <p>img</p>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <tbody>\n                        <td><strong>Attribute_name</strong></td>\n                        <td><strong>Attribute_type</strong></td>\n                    \n                            <tr v-for=\"(row, index) in rows\" :key=row.index>\n                                <td><input type=\"text\" v-model=\"row.name\"></td>\n                                <td><input type=\"text\" v-model=\"row.type\"></td>\n                                <td>\n                                    <a v-on:click=\"removeElement(index);\" style=\"cursor: pointer\">Remove</a>\n                                </td>\n                            </tr>\n                    </tbody>\n                </tr>\n            </thead>\n        </table>\n        <div>\n            <button class=\"button btn-primary\" @click=\"addRow\">Add row</button>\n            <button class=\"button btn-primary\" @click=\"CreateSchema()\">Add Schema</button>\n        </div>\n    </div>\n\n</template>\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n    props:['wax','assetID'],\n    data(){\n        return{\n            rows:[],\n            title:\"\",\n            collectionname:\"\",\n            countFirstboxInputID:0,\n            countSecondboxInputID:0,\n            Schema_name:\"\",\n            schema_format:[\n                {\n                    \"name\":\"name\",\n                    \"type\":\"string\"\n                },\n                {\n                    \"name\":\"img\",\n                    \"type\":\"image\"\n                }\n            ]\n        }\n    },\n    watch:{\n\n    },\n    computed: {\n      ...mapGetters([\n        'getWax'\n      ]),\n      collectionName:function(){\n          return this.collectionname\n      },\n      schemaFormat:function(){\n         return this.schema_format;\n      }\n    },\n    methods:{\n        signalChange:function(evt){\n            console.log(\"this is changed\")\n            this.$emit(\"change\", evt)\n        },\n        addRow: function(){\n            var elem = document.createElement('tr');\n                    this.rows.push({\n                        name: \"\",\n                        type: \"\",\n                    });\n                    console.log(this.rows)\n                    return elem;\n        },\n        removeElement: function(index) {\n                    this.rows.splice(index, 1);\n        },\n         setFilename: function(event, row) {\n                    var file = event.target.files[0];\n                    row.file = file\n        },\n        async CreateSchema(){\n            \n            for(var key in this.rows){\n               this.schema_format.push({\"name\":this.rows[key].name,\"type\":this.rows[key].type})\n           }\n            console.log(\"it is \"+this.collectionName);\n            if(!this.getWax.api){\n               return console.log(\"Need to login first\")\n           }\n           try {\n               this.result=await this.getWax.api.transact({\n                   actions:[{\n                    account: 'atomicassets',\n                    name: 'createschema',\n                    authorization: [{\n                        actor: this.getWax.userAccount,\n                        permission:'active',\n                    }],\n                    data: {\n                        authorized_creator:this.getWax.userAccount,\n                        collection_name:this.collectionName,\n                        schema_format:this.schemaFormat,\n                        schema_name:this.Schema_name,\n                    },\n                }]\n               },{\n                   blocksBehind: 3,\n                   expireSeconds: 30\n               });\n           }\n           catch(e){\n               this.result=e\n               console.log(e)\n           }   \n       }\n    }\n}\n</script>"],"sourceRoot":"src/components"}]}