{"version":3,"sources":["webpack:///./src/views/Asset.vue?4d32","webpack:///src/views/Asset.vue","webpack:///./src/views/Asset.vue?3f6c","webpack:///./src/views/Asset.vue","webpack:///./src/graphql/getAsset.gql"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","$route","params","asset_id","attrs","scopedSlots","_u","key","fn","ref","ref_result","result","loading","error","data","_l","asset","atomicassets_template","immutable_data","img","ipfs","_e","atomicassets_asset_mints","template_mint","collection_name","name","owner","staticRenderFns","aid","component","doc","loc","source","collectFragmentReferences","node","refs","kind","add","value","type","selectionSet","selections","forEach","selection","variableDefinitions","def","definitions","definitionRefs","findOperation","i","length","element","oneQuery","operationName","newDoc","hasOwnProperty","opRefs","Set","allRefs","newRefs","refName","size","prevRefs","has","childRefs","childRef","op","push","module","exports"],"mappings":"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","file":"js/chunk-4f8c06a0.bff4954a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"asset\"},[_c('h1',[_vm._v(\"Asset Page of \"+_vm._s(_vm.$route.params.asset_id))]),_c('ApolloQuery',{attrs:{\"query\":require('../graphql/getAsset.gql'),\"variables\":{ asset_id: _vm.$route.params.asset_id}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar ref_result = ref.result;\nvar loading = ref_result.loading;\nvar error = ref_result.error;\nvar data = ref_result.data;\nreturn [(loading)?_c('div',{staticClass:\"loading apollo\"},[_vm._v(\"Loading...\")]):(error)?_c('div',{staticClass:\"error apollo\"},[_vm._v(\"An error occurred\")]):(data)?_c('div',{staticClass:\"result apollo\"},[_c('div',{staticClass:\"inventory\"},_vm._l((data.atomicassets_assets),function(asset){return _c('div',{key:asset.asset_id},[(asset.atomicassets_template!=null)?_c('div',{staticClass:\"asset-img\"},[(asset.atomicassets_template.immutable_data.img!=null)?_c('div',{staticClass:\"asset-img-2\"},[_c('img',{attrs:{\"src\":_vm.ipfs + asset.atomicassets_template.immutable_data.img,\"width\":\"100%\",\"height\":\"100%\"}})]):_vm._e()]):(asset.immutable_data!=null)?_c('div',{staticClass:\"asset-img\"},[(asset.immutable_data.img!=null)?_c('div',{staticClass:\"asset-img-2\"},[_c('img',{attrs:{\"src\":_vm.ipfs + asset.immutable_data.img,\"width\":\"100%\",\"height\":\"100%\"}})]):_vm._e()]):_vm._e(),_c('div',{staticClass:\"mint-num\"},[_vm._v(\" \"+_vm._s(asset.atomicassets_asset_mints.template_mint)+\" \")]),_c('div',{staticClass:\"col-name\"},[_vm._v(\" \"+_vm._s(asset.collection_name)+\" \")]),(asset.atomicassets_template!=null)?_c('div',{staticClass:\"asset-name\"},[_vm._v(\" \"+_vm._s(asset.atomicassets_template.immutable_data.name)+\" \")]):_c('div',{staticClass:\"asset-name\"},[_vm._v(\" \"+_vm._s(asset.immutable_data.name)+\" \")]),_c('div',{staticClass:\"owner-name\"},[_vm._v(\" \"+_vm._s(asset.owner)+\" \")])])}),0)]):_c('div',{staticClass:\"no-result apollo\"},[_vm._v(\"No result :(\")])]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"asset\">\n    <h1>Asset Page of {{ $route.params.asset_id }}</h1>\n    <ApolloQuery\n    :query=\"require('../graphql/getAsset.gql')\"\n    :variables=\"{ asset_id: $route.params.asset_id}\"\n    >\n      <template v-slot=\"{ result: { loading, error, data } }\">\n        <!-- Loading -->\n        <div v-if=\"loading\" class=\"loading apollo\">Loading...</div>\n\n        <!-- Error -->\n        <div v-else-if=\"error\" class=\"error apollo\">An error occurred</div>\n\n        <!-- Result -->\n        <div v-else-if=\"data\" class=\"result apollo\">\n\n          <div class=\"inventory\">\n            <div v-for=\"asset in data.atomicassets_assets\" :key=\"asset.asset_id\">\n              <div class=\"asset-img\" v-if=\"asset.atomicassets_template!=null\">\n                <div class=\"asset-img-2\" v-if=\"asset.atomicassets_template.immutable_data.img!=null\">\n                  <img v-bind:src=\"ipfs + asset.atomicassets_template.immutable_data.img\" width=\"100%\" height=\"100%\">\n                </div>\n              </div>\n              <div class=\"asset-img\" v-else-if=\"asset.immutable_data!=null\">\n                <div class=\"asset-img-2\" v-if=\"asset.immutable_data.img!=null\">\n                  <img v-bind:src=\"ipfs + asset.immutable_data.img\" width=\"100%\" height=\"100%\">\n                </div>\n              </div>\n              <div class=\"mint-num\">\n                {{asset.atomicassets_asset_mints.template_mint}}\n              </div>\n              <div class=\"col-name\">\n                {{asset.collection_name}}\n              </div>\n              <div class=\"asset-name\" v-if=\"asset.atomicassets_template!=null\">\n                {{asset.atomicassets_template.immutable_data.name}}\n              </div>\n              <div class=\"asset-name\" v-else>\n                {{asset.immutable_data.name}}\n              </div>\n              <div class=\"owner-name\">\n                {{asset.owner}}\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- No result -->\n        <div v-else class=\"no-result apollo\">No result :(</div>\n      </template>\n    </ApolloQuery>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      aid: 1099512463310,\n      ipfs: \"http://ipfs.io/ipfs/\",\n    }\n  }\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Asset.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Asset.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Asset.vue?vue&type=template&id=568c22d8&\"\nimport script from \"./Asset.vue?vue&type=script&lang=js&\"\nexport * from \"./Asset.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"atomicassets_assets\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"asset_id\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"bigint\"}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"atomicassets_assets\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"where\"},\"value\":{\"kind\":\"ObjectValue\",\"fields\":[{\"kind\":\"ObjectField\",\"name\":{\"kind\":\"Name\",\"value\":\"asset_id\"},\"value\":{\"kind\":\"ObjectValue\",\"fields\":[{\"kind\":\"ObjectField\",\"name\":{\"kind\":\"Name\",\"value\":\"_eq\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"asset_id\"}}}]}}]}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"asset_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"atomicassets_template\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"immutable_data\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"max_supply\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"issued_supply\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"burnable\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transferable\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"template_id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"schema_name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"collection_name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"atomicassets_assets_backed_tokens\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"token_symbol\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"amount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"immutable_data\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"atomicassets_asset_mints\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"template_mint\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":470}};\n    doc.loc.source = {\"body\":\"query atomicassets_assets ($asset_id: bigint) {\\n  atomicassets_assets(where: {asset_id: {_eq: $asset_id}}) {\\n    asset_id\\n    atomicassets_template {\\n      immutable_data\\n      max_supply\\n      issued_supply\\n      burnable\\n      transferable\\n    }\\n    owner\\n    template_id\\n    schema_name\\n    collection_name\\n    atomicassets_assets_backed_tokens {\\n      token_symbol\\n      amount\\n    }\\n    immutable_data\\n    atomicassets_asset_mints {\\n      template_mint\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"atomicassets_assets\"] = oneQuery(doc, \"atomicassets_assets\");\n        \n"],"sourceRoot":""}