{"version":3,"sources":["webpack:///./src/components/NFTPage.vue?2419","webpack:///src/components/NFTPage.vue","webpack:///./src/components/NFTPage.vue?ce70","webpack:///./src/components/NFTPage.vue","webpack:///./src/graphQL/collectionsinfo.gql"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","_s","getWax","attrs","owner","scopedSlots","_u","key","fn","ref","data","result","_l","item","index","collection_name","staticClass","on","$event","$router","push","name","params","collectionname","path","_e","staticRenderFns","component","doc","loc","source","collectFragmentReferences","node","refs","kind","add","value","type","selectionSet","selections","forEach","selection","variableDefinitions","def","definitions","definitionRefs","findOperation","i","length","element","oneQuery","operationName","newDoc","hasOwnProperty","opRefs","Set","allRefs","newRefs","refName","size","prevRefs","has","childRefs","childRef","op","module","exports"],"mappings":"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","file":"js/chunk-3ba8deda.f9d8d073.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('P',[_vm._v(\"My Collections\")]),_c('p',[_vm._v(\"this is \"+_vm._s(_vm.getWax))]),(this.getWax!=\"\")?_c('div',[_c('ApolloQuery',{attrs:{\"query\":require('../graphQL/collectionsinfo.gql'),\"variables\":{owner:'kdoaw.wam'}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar data = ref.result.data;\nreturn _vm._l((data.atomicassets_assets),function(item,index){return _c('div',{key:item.collection_name},[_vm._v(\" \"+_vm._s(index)+\": \"+_vm._s(item.collection_name)+\" \"),_c('button',{staticClass:\"btn btn-primary\",on:{\"click\":function($event){return _vm.$router.push({name:'collectionInfo',params:{collectionname:item.collection_name}})}}},[_vm._v(\"Details\")])])})}}],null,false,2127860982)}),_c('button',{on:{\"click\":function($event){return _vm.$router.push({path:'/NFT/creator'})}}},[_vm._v(\"Create\")])],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n      <P>My Collections</p>\n      \n        <p>this is {{getWax}}</p>\n      <div v-if='this.getWax!=\"\"'>\n        <ApolloQuery :query=\"require('../graphQL/collectionsinfo.gql')\" :variables=\"{owner:'kdoaw.wam'}\">\n          <template v-slot=\"{ result: { data } }\">\n            <div v-for=\"(item,index) in data.atomicassets_assets\" :key=\"item.collection_name\">\n              {{index}}: {{item.collection_name}}\n             <button class=\"btn btn-primary\" @click=\"$router.push({name:'collectionInfo',params:{collectionname:item.collection_name}})\">Details</button>&nbsp;&nbsp;\n            </div>\n          </template>\n          </ApolloQuery> \n          <button @click=\"$router.push({path:'/NFT/creator'})\">Create</button>\n      </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nexport default {\n    name:'NFT Assets',\n    components:{\n\n    },\n    computed: {\n      ...mapGetters([\n        'getWax'\n      ])\n    },\n    data(){\n      return{\n        wax:\"\",\n        state:\"\"\n      }\n    },\n    mounted(){\n      this.wax = this.$store.getters.getWax\n    },\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NFTPage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NFTPage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NFTPage.vue?vue&type=template&id=51be659b&\"\nimport script from \"./NFTPage.vue?vue&type=script&lang=js&\"\nexport * from \"./NFTPage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"collectionInfo\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"atomicassets_assets\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"where\"},\"value\":{\"kind\":\"ObjectValue\",\"fields\":[{\"kind\":\"ObjectField\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"},\"value\":{\"kind\":\"ObjectValue\",\"fields\":[{\"kind\":\"ObjectField\",\"name\":{\"kind\":\"Name\",\"value\":\"_eq\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}}}]}}]}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"collection_name\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":120}};\n    doc.loc.source = {\"body\":\"query collectionInfo($owner: String!) {\\n  atomicassets_assets(where: {owner: {_eq: $owner}}) {\\n    collection_name\\n  }\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"collectionInfo\"] = oneQuery(doc, \"collectionInfo\");\n        \n"],"sourceRoot":""}